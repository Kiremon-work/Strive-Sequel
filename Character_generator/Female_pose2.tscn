[gd_scene load_steps=79 format=2]

[ext_resource path="res://Character_generator/recolor shader mask.shader" type="Shader" id=1]
[ext_resource path="res://Character_generator/images/09_wings/Wings_seraph.png" type="Texture" id=2]
[ext_resource path="res://Character_generator/images/00_body_nude/ShoulderR.png" type="Texture" id=3]
[ext_resource path="res://Character_generator/images/00_body_nude/ArmL1.png" type="Texture" id=4]
[ext_resource path="res://Character_generator/images/00_body_nude/HandL2.png" type="Texture" id=5]
[ext_resource path="res://Character_generator/images/00_body_nude/ArmR1.png" type="Texture" id=6]
[ext_resource path="res://Character_generator/images/98_masks/mask_kobold.png" type="Texture" id=7]
[ext_resource path="res://Character_generator/images/010_armory_set_maidu/Arm_armorR1.png" type="Texture" id=8]
[ext_resource path="res://Character_generator/images/010_armory_set_maidu/Pregnancy_maidu_big.png" type="Texture" id=9]
[ext_resource path="res://Character_generator/images/06_tails/Kobold_tail.png" type="Texture" id=10]
[ext_resource path="res://Character_generator/images/06_hairs_back/hair_back_wawe.png" type="Texture" id=11]
[ext_resource path="res://Character_generator/images/00_body_nude/HandR2.png" type="Texture" id=12]
[ext_resource path="res://Character_generator/images/00_body_nude/default_belly.png" type="Texture" id=13]
[ext_resource path="res://Character_generator/images/010_armory_set_maidu/yubka.png" type="Texture" id=14]
[ext_resource path="res://Character_generator/images/00_body_nude/torso.png" type="Texture" id=15]
[ext_resource path="res://Character_generator/images/11_eyebrows/eyebrows1.png" type="Texture" id=16]
[ext_resource path="res://Character_generator/images/00_body_nude/tits_normal.png" type="Texture" id=17]
[ext_resource path="res://Character_generator/images/010_armory_set_maidu/bluza.png" type="Texture" id=18]
[ext_resource path="res://Character_generator/images/00_body_nude/pregnancy_belly_big.png" type="Texture" id=19]
[ext_resource path="res://Character_generator/images/99_armory_set_maidu/Hand2_armorL2.png" type="Texture" id=20]
[ext_resource path="res://Character_generator/images/99_armory_set_maidu/LegR_armor1.png" type="Texture" id=21]
[ext_resource path="res://Character_generator/images/12_lips/lips5.png" type="Texture" id=22]
[ext_resource path="res://Character_generator/images/99_armory_set_maidu/Hand2_armorR2.png" type="Texture" id=23]
[ext_resource path="res://Character_generator/images/05_hairs_assist/hair_assist_twin_tails 2.png" type="Texture" id=24]
[ext_resource path="res://Character_generator/images/07_masks/Hair_mask0.png" type="Texture" id=25]
[ext_resource path="res://Character_generator/images/98_masks/mask_hair1.png" type="Texture" id=26]
[ext_resource path="res://Character_generator/images/07_masks/Hair_mask1.png" type="Texture" id=27]
[ext_resource path="res://Character_generator/images/14_testickles/Testicle_furry.png" type="Texture" id=28]
[ext_resource path="res://Character_generator/images/010_armory_set_maidu/Shoulder_armorR1.png" type="Texture" id=29]
[ext_resource path="res://Character_generator/images/00_body_nude/LegL.png" type="Texture" id=30]
[ext_resource path="res://Character_generator/images/00_body_nude/tits_nipples_mask.png" type="Texture" id=31]
[ext_resource path="res://Character_generator/images/07_masks/Wings_mask.png" type="Texture" id=32]
[ext_resource path="res://Character_generator/images/07_masks/Hair_mask2.png" type="Texture" id=33]
[ext_resource path="res://Character_generator/images/22_slime/slime_taz.png" type="Texture" id=34]
[ext_resource path="res://Character_generator/images/00_body_nude/ShoulderL.png" type="Texture" id=35]
[ext_resource path="res://Character_generator/images/00_body_nude/taz.png" type="Texture" id=36]
[ext_resource path="res://Character_generator/images/01_heads/head_kobold2.png" type="Texture" id=37]
[ext_resource path="res://Character_generator/images/22_slime/slime_body.png" type="Texture" id=38]
[ext_resource path="res://Character_generator/images/00_body_nude/LegR.png" type="Texture" id=39]
[ext_resource path="res://Character_generator/images/03_ears/ears_elven.png" type="Texture" id=40]
[ext_resource path="res://Character_generator/images/21_nereid/nereid_LegR.png" type="Texture" id=41]
[ext_resource path="res://Character_generator/images/03_ears/ears_fox.png" type="Texture" id=42]
[ext_resource path="res://Character_generator/images/00_body_nude/torso_nipples_mask.png" type="Texture" id=43]
[ext_resource path="res://Character_generator/images/04_hairs_base/hair_base_default.png" type="Texture" id=44]
[ext_resource path="res://Character_generator/images/21_nereid/nereid_armR.png" type="Texture" id=45]
[ext_resource path="res://Character_generator/images/14_animals_body/arachna_helicere.png" type="Texture" id=46]
[ext_resource path="res://Character_generator/images/02_faces/face1.png" type="Texture" id=47]
[ext_resource path="res://Character_generator/images/98_masks/mask_hair2.png" type="Texture" id=48]
[ext_resource path="res://Character_generator/images/99_armory_set_maidu/tits_maid_normal.png" type="Texture" id=49]
[ext_resource path="res://Character_generator/images/14_animals_body/arachna_body.png" type="Texture" id=50]
[ext_resource path="res://Character_generator/images/99_armory_set_maidu/LegL_armor1.png" type="Texture" id=51]
[ext_resource path="res://Character_generator/images/99_armory_set_maidu/Shoulder_armorL1.png" type="Texture" id=52]
[ext_resource path="res://Character_generator/images/13_dicks/Dick_furry_up.png" type="Texture" id=53]
[ext_resource path="res://Character_generator/images/21_nereid/Nereid_armL.png" type="Texture" id=54]
[ext_resource path="res://Character_generator/images/21_nereid/nereid_LegL.png" type="Texture" id=55]
[ext_resource path="res://Character_generator/images/99_armory_set_maidu/Arm_armorL1.png" type="Texture" id=56]
[ext_resource path="res://Character_generator/images/14_animals_body/arachna_taz.png" type="Texture" id=57]
[ext_resource path="res://Character_generator/images/10_eyes/sklera.png" type="Texture" id=58]
[ext_resource path="res://src/tools/deform_poly.gd" type="Script" id=59]
[ext_resource path="res://src/tools/deform_drag_point.gd" type="Script" id=60]
[ext_resource path="res://Character_generator/images/08_horns/Horn_straight_top.png" type="Texture" id=61]
[ext_resource path="res://Character_generator/images/10_eyes/eyes3.png" type="Texture" id=62]

[sub_resource type="ShaderMaterial" id=1]
shader = ExtResource( 1 )
shader_param/target1color = Color( 0.482353, 0.352941, 0.352941, 1 )
shader_param/target2color = Color( 0.470588, 0.227451, 0.243137, 1 )
shader_param/target3color = Color( 0.505882, 0.254902, 0.333333, 1 )
shader_param/part1color = Color( 0.47451, 0.231373, 0.258824, 1 )
shader_param/part2color = Color( 0.466667, 0.219608, 0.32549, 1 )
shader_param/part3color = Color( 0.47451, 0.235294, 0.235294, 1 )
shader_param/overlay = 0.966

[sub_resource type="Shader" id=19]
code = "shader_type canvas_item;

uniform vec2 anchor1 = vec2(0.0);
uniform vec2 anchor2 = vec2(0.0);
uniform vec2 anchor3 = vec2(0.0);
uniform vec2 anchor4 = vec2(0.0);
uniform vec2 anchor5 = vec2(0.0);
uniform vec2 anchor6 = vec2(0.0);

uniform vec2 move1 = vec2(0.0);
uniform vec2 move2 = vec2(0.0);
uniform vec2 move3 = vec2(0.0);
uniform vec2 move4 = vec2(0.0);
uniform vec2 move5 = vec2(0.0);
uniform vec2 move6 = vec2(0.0);

uniform float range1 = 0.0;
uniform float range2 = 0.0;
uniform float range3 = 0.0;
uniform float range4 = 0.0;
uniform float range5 = 0.0;
uniform float range6 = 0.0;

uniform float power = 1.0;


uniform vec4 target1color : hint_color;
uniform vec4 target2color : hint_color;
uniform vec4 target3color : hint_color;

uniform vec4 part1color : hint_color;
uniform vec4 part2color : hint_color;
uniform vec4 part3color : hint_color;

uniform sampler2D part1;
uniform sampler2D part2;
uniform sampler2D part3;

uniform float overlay = 0.7;

vec3 rgb2hsl(vec3 c )
{
    float epsilon = 0.00000001;
    float cmin = min( c.r, min( c.g, c.b ) );
    float cmax = max( c.r, max( c.g, c.b ) );
    float cd   = cmax - cmin;
    vec3 hsl = vec3(0.0);
    hsl.z = (cmax + cmin) / 2.0;
    hsl.y = mix(cd / (cmax + cmin + epsilon), cd / (epsilon + 2.0 - (cmax + cmin)), step(0.5, hsl.z));

    vec3 a = vec3(1.0 - step(epsilon, abs(cmax - c)));
    a = mix(vec3(a.x, 0.0, a.z), a, step(0.5, 2.0 - a.x - a.y));
    a = mix(vec3(a.x, a.y, 0.0), a, step(0.5, 2.0 - a.x - a.z));
    a = mix(vec3(a.x, a.y, 0.0), a, step(0.5, 2.0 - a.y - a.z));
    
    hsl.x = dot( vec3(0.0, 2.0, 4.0) + ((c.gbr - c.brg) / (epsilon + cd)), a );
    hsl.x = (hsl.x + (1.0 - step(0.0, hsl.x) ) * 6.0 ) / 6.0;
	hsl.y = clamp (hsl.y, 0.0, 1.0);
    return hsl;
}

vec3 hsl2rgb(vec3 HSL)
{
  float R = abs(HSL.x * 6.0 - 3.0) - 1.0;
  float G = 2.0 - abs(HSL.x * 6.0 - 2.0);
  float B = 2.0 - abs(HSL.x * 6.0 - 4.0);
  vec3 RGB = clamp(vec3(R,G,B), 0.0, 1.0);
  float C = (1.0 - abs(2.0 * HSL.z - 1.0)) * HSL.y;
  return (RGB - 0.5) * C + HSL.z;
}

void fragment(){
    vec4 color = texture(TEXTURE, UV);
	float a = color.a;
	vec3 t1 = rgb2hsl(target1color.rgb);
	vec3 t2 = rgb2hsl(target2color.rgb);
	vec3 t3 = rgb2hsl(target3color.rgb);
	vec3 k = rgb2hsl(color.rgb);
	if (texture(part1, UV).a > 0.0){
		vec3 dcolor = rgb2hsl(part1color.rgb);
		float rot = dcolor.x - t1.x;
		k.x = k.x + rot;
		if (k.x > 1.0) k.x -= 1.0;
		if (k.x < 0.0) k.x += 1.0;
		k.y = dcolor.y;
		k.z *= dcolor.z/t1.z;
		k.z = clamp(k.z, 0.0, 1.0);
//		k.z *= dcolor.z;
		k = hsl2rgb(k);
		k = mix(color.rgb, k, overlay * texture(part1, UV).a);
		color = vec4(k.xyz, a);
	}
	k = rgb2hsl(color.rgb);
	if (texture(part2, UV).a > 0.0){
		vec3 dcolor = rgb2hsl(part2color.rgb);
		float rot = dcolor.x - t2.x;
		k.x = k.x + rot;
		if (k.x > 1.0) k.x -= 1.0;
		if (k.x < 0.0) k.x += 1.0;
		k.y = dcolor.y;
		k.z *= dcolor.z / t2.z;
		k.z = clamp(k.z, 0.0, 1.0);
//		k.z *= dcolor.z;
		k = hsl2rgb(k);
		k = mix(color.rgb, k, overlay* texture(part2, UV).a);
		color = vec4(k.xyz, a);
	}
	k = rgb2hsl(color.rgb);
	if (texture(part3, UV).a > 0.0){
		vec3 dcolor = rgb2hsl(part3color.rgb);
		float rot = dcolor.x - t3.x;
		k.x = k.x + rot;
		if (k.x > 1.0) k.x -= 1.0;
		if (k.x < 0.0) k.x += 1.0;
		k.y = dcolor.y;
		k.z *= dcolor.z / t3.z;
		k.z = clamp(k.z, 0.0, 1.0);
//		k.z *= dcolor.z;
		k = hsl2rgb(k);
		k = mix(color.rgb, k, overlay * texture(part3, UV).a);
		color = vec4(k.xyz, a);
	}
	COLOR = color;
}

void vertex(){
	vec2 offset = vec2(0.0);
	float dist = length(VERTEX - anchor1);
	
	if (dist < range1){
		offset += move1 * (range1 - dist) * power / range1;
	}
	dist = length(VERTEX - anchor2);
	if (dist < range2){
		offset += move2 * (range2 - dist) * power / range2;
	}
	dist = length(VERTEX - anchor3);
	if (dist < range3){
		offset += move3 * (range3 - dist) * power / range3;
	}
	dist = length(VERTEX - anchor4);
	if (dist < range4){
		offset += move4 * (range4 - dist) * power / range4;
	}
	dist = length(VERTEX - anchor5);
	if (dist < range5){
		offset += move5 * (range5 - dist) * power / range5;
	}
	dist = length(VERTEX - anchor6);
	if (dist < range6){
		offset += move6 * (range6 - dist) * power / range6;
	}
	VERTEX += offset;
}"

[sub_resource type="ShaderMaterial" id=20]
shader = SubResource( 19 )
shader_param/anchor1 = Vector2( 361, 478 )
shader_param/anchor2 = Vector2( 520, 478 )
shader_param/anchor3 = Vector2( 0, 0 )
shader_param/anchor4 = Vector2( 0, 0 )
shader_param/anchor5 = Vector2( 0, 0 )
shader_param/anchor6 = Vector2( 0, 0 )
shader_param/move1 = Vector2( 0, 0 )
shader_param/move2 = Vector2( 0, 0 )
shader_param/move3 = Vector2( 0, 0 )
shader_param/move4 = Vector2( 0, 0 )
shader_param/move5 = Vector2( 0, 0 )
shader_param/move6 = Vector2( 0, 0 )
shader_param/range1 = 200.0
shader_param/range2 = 200.0
shader_param/range3 = 0
shader_param/range4 = 0
shader_param/range5 = 0
shader_param/range6 = 0
shader_param/power = 1.0
shader_param/target1color = Color( 1, 0, 0, 1 )
shader_param/target2color = Color( 1, 0, 0, 1 )
shader_param/target3color = Color( 1, 0, 0, 1 )
shader_param/part1color = Color( 1, 0, 0, 1 )
shader_param/part2color = Color( 0.423529, 0.631373, 0.635294, 1 )
shader_param/part3color = Color( 0.0941176, 0.101961, 0.227451, 1 )
shader_param/overlay = 0.7
shader_param/part2 = ExtResource( 26 )
shader_param/part3 = ExtResource( 48 )

[sub_resource type="ShaderMaterial" id=4]
shader = ExtResource( 1 )
shader_param/target1color = Color( 0.788235, 0.607843, 0.788235, 1 )
shader_param/target2color = Color( 0.564706, 0.203922, 0.203922, 1 )
shader_param/target3color = Color( 0.658824, 0.25098, 0.25098, 1 )
shader_param/part1color = Color( 0.592157, 0.231373, 0.231373, 1 )
shader_param/part2color = Color( 0.560784, 0.192157, 0.192157, 1 )
shader_param/part3color = Color( 0.552941, 0.207843, 0.207843, 1 )
shader_param/overlay = 0.899

[sub_resource type="ShaderMaterial" id=5]
shader = ExtResource( 1 )
shader_param/target1color = Color( 0.235294, 0.482353, 0.501961, 1 )
shader_param/target2color = Color( 0.54902, 0.368627, 0.254902, 1 )
shader_param/target3color = Color( 0.509804, 0.345098, 0.239216, 1 )
shader_param/part1color = Color( 0.509804, 0.345098, 0.239216, 1 )
shader_param/part2color = Color( 0.509804, 0.345098, 0.239216, 1 )
shader_param/part3color = Color( 0.509804, 0.345098, 0.239216, 1 )
shader_param/overlay = 0.509

[sub_resource type="ShaderMaterial" id=6]
shader = ExtResource( 1 )
shader_param/target1color = Color( 0.14902, 0.2, 0.509804, 1 )
shader_param/target2color = Color( 0.14902, 0.2, 0.509804, 1 )
shader_param/target3color = Color( 0.14902, 0.2, 0.509804, 1 )
shader_param/part1color = Color( 0.14902, 0.2, 0.509804, 1 )
shader_param/part2color = Color( 0.176471, 0.176471, 0.152941, 1 )
shader_param/part3color = Color( 0.419608, 0.564706, 0.643137, 1 )
shader_param/overlay = 0.952
shader_param/part1 = ExtResource( 32 )

[sub_resource type="Shader" id=7]
code = "shader_type canvas_item;

uniform vec2 anchor1 = vec2(0.0);
uniform vec2 anchor2 = vec2(0.0);
uniform vec2 anchor3 = vec2(0.0);
uniform vec2 anchor4 = vec2(0.0);
uniform vec2 anchor5 = vec2(0.0);
uniform vec2 anchor6 = vec2(0.0);

uniform vec2 move1 = vec2(0.0);
uniform vec2 move2 = vec2(0.0);
uniform vec2 move3 = vec2(0.0);
uniform vec2 move4 = vec2(0.0);
uniform vec2 move5 = vec2(0.0);
uniform vec2 move6 = vec2(0.0);

uniform float range1 = 0.0;
uniform float range2 = 0.0;
uniform float range3 = 0.0;
uniform float range4 = 0.0;
uniform float range5 = 0.0;
uniform float range6 = 0.0;

uniform float power = 1.0;


uniform vec4 target1color : hint_color;
uniform vec4 target2color : hint_color;
uniform vec4 target3color : hint_color;

uniform vec4 part1color : hint_color;
uniform vec4 part2color : hint_color;
uniform vec4 part3color : hint_color;

uniform sampler2D part1;
uniform sampler2D part2;
uniform sampler2D part3;

uniform float overlay = 0.7;

vec3 rgb2hsl(vec3 c )
{
    float epsilon = 0.00000001;
    float cmin = min( c.r, min( c.g, c.b ) );
    float cmax = max( c.r, max( c.g, c.b ) );
    float cd   = cmax - cmin;
    vec3 hsl = vec3(0.0);
    hsl.z = (cmax + cmin) / 2.0;
    hsl.y = mix(cd / (cmax + cmin + epsilon), cd / (epsilon + 2.0 - (cmax + cmin)), step(0.5, hsl.z));

    vec3 a = vec3(1.0 - step(epsilon, abs(cmax - c)));
    a = mix(vec3(a.x, 0.0, a.z), a, step(0.5, 2.0 - a.x - a.y));
    a = mix(vec3(a.x, a.y, 0.0), a, step(0.5, 2.0 - a.x - a.z));
    a = mix(vec3(a.x, a.y, 0.0), a, step(0.5, 2.0 - a.y - a.z));
    
    hsl.x = dot( vec3(0.0, 2.0, 4.0) + ((c.gbr - c.brg) / (epsilon + cd)), a );
    hsl.x = (hsl.x + (1.0 - step(0.0, hsl.x) ) * 6.0 ) / 6.0;
	hsl.y = clamp (hsl.y, 0.0, 1.0);
    return hsl;
}

vec3 hsl2rgb(vec3 HSL)
{
  float R = abs(HSL.x * 6.0 - 3.0) - 1.0;
  float G = 2.0 - abs(HSL.x * 6.0 - 2.0);
  float B = 2.0 - abs(HSL.x * 6.0 - 4.0);
  vec3 RGB = clamp(vec3(R,G,B), 0.0, 1.0);
  float C = (1.0 - abs(2.0 * HSL.z - 1.0)) * HSL.y;
  return (RGB - 0.5) * C + HSL.z;
}

void fragment(){
    vec4 color = texture(TEXTURE, UV);
	float a = color.a;
	vec3 t1 = rgb2hsl(target1color.rgb);
	vec3 t2 = rgb2hsl(target2color.rgb);
	vec3 t3 = rgb2hsl(target3color.rgb);
	vec3 k = rgb2hsl(color.rgb);
	if (texture(part1, UV).a > 0.0){
		vec3 dcolor = rgb2hsl(part1color.rgb);
		float rot = dcolor.x - t1.x;
		k.x = k.x + rot;
		if (k.x > 1.0) k.x -= 1.0;
		if (k.x < 0.0) k.x += 1.0;
		k.y = dcolor.y;
		k.z *= dcolor.z/t1.z;
		k.z = clamp(k.z, 0.0, 1.0);
//		k.z *= dcolor.z;
		k = hsl2rgb(k);
		k = mix(color.rgb, k, overlay * texture(part1, UV).a);
		color = vec4(k.xyz, a);
	}
	k = rgb2hsl(color.rgb);
	if (texture(part2, UV).a > 0.0){
		vec3 dcolor = rgb2hsl(part2color.rgb);
		float rot = dcolor.x - t2.x;
		k.x = k.x + rot;
		if (k.x > 1.0) k.x -= 1.0;
		if (k.x < 0.0) k.x += 1.0;
		k.y = dcolor.y;
		k.z *= dcolor.z / t2.z;
		k.z = clamp(k.z, 0.0, 1.0);
//		k.z *= dcolor.z;
		k = hsl2rgb(k);
		k = mix(color.rgb, k, overlay* texture(part2, UV).a);
		color = vec4(k.xyz, a);
	}
	k = rgb2hsl(color.rgb);
	if (texture(part3, UV).a > 0.0){
		vec3 dcolor = rgb2hsl(part3color.rgb);
		float rot = dcolor.x - t3.x;
		k.x = k.x + rot;
		if (k.x > 1.0) k.x -= 1.0;
		if (k.x < 0.0) k.x += 1.0;
		k.y = dcolor.y;
		k.z *= dcolor.z / t3.z;
		k.z = clamp(k.z, 0.0, 1.0);
//		k.z *= dcolor.z;
		k = hsl2rgb(k);
		k = mix(color.rgb, k, overlay * texture(part3, UV).a);
		color = vec4(k.xyz, a);
	}
	COLOR = color;
}

void vertex(){
	vec2 offset = vec2(0.0);
	float dist = length(VERTEX - anchor1);
	
	if (dist < range1){
		offset += move1 * (range1 - dist) * power / range1;
	}
	dist = length(VERTEX - anchor2);
	if (dist < range2){
		offset += move2 * (range2 - dist) * power / range2;
	}
	dist = length(VERTEX - anchor3);
	if (dist < range3){
		offset += move3 * (range3 - dist) * power / range3;
	}
	dist = length(VERTEX - anchor4);
	if (dist < range4){
		offset += move4 * (range4 - dist) * power / range4;
	}
	dist = length(VERTEX - anchor5);
	if (dist < range5){
		offset += move5 * (range5 - dist) * power / range5;
	}
	dist = length(VERTEX - anchor6);
	if (dist < range6){
		offset += move6 * (range6 - dist) * power / range6;
	}
	VERTEX += offset;
}"

[sub_resource type="ShaderMaterial" id=8]
shader = SubResource( 7 )
shader_param/anchor1 = Vector2( 436, 590 )
shader_param/anchor2 = Vector2( 365, 539 )
shader_param/anchor3 = Vector2( 519, 539 )
shader_param/anchor4 = Vector2( 0, 0 )
shader_param/anchor5 = Vector2( 0, 0 )
shader_param/anchor6 = Vector2( 0, 0 )
shader_param/move1 = Vector2( 0, 0 )
shader_param/move2 = Vector2( 0, 0 )
shader_param/move3 = Vector2( 0, 0 )
shader_param/move4 = Vector2( 0, 0 )
shader_param/move5 = Vector2( 0, 0 )
shader_param/move6 = Vector2( 0, 0 )
shader_param/range1 = 100.0
shader_param/range2 = 110.0
shader_param/range3 = 110.0
shader_param/range4 = 0
shader_param/range5 = 0
shader_param/range6 = 0
shader_param/power = 1.0
shader_param/target1color = Color( 0.65098, 0.411765, 0.313726, 1 )
shader_param/target2color = Color( 0.654902, 0.380392, 0.266667, 1 )
shader_param/target3color = Color( 0.654902, 0.380392, 0.266667, 1 )
shader_param/part1color = Color( 0.654902, 0.380392, 0.266667, 1 )
shader_param/part2color = Color( 0.27451, 0.317647, 0.2, 1 )
shader_param/part3color = Color( 0.894118, 0.615686, 0.615686, 1 )
shader_param/overlay = 0.999
shader_param/part3 = ExtResource( 7 )

[sub_resource type="Shader" id=21]
code = "shader_type canvas_item;

uniform vec2 anchor1 = vec2(0.0);
uniform vec2 anchor2 = vec2(0.0);
uniform vec2 anchor3 = vec2(0.0);
uniform vec2 anchor4 = vec2(0.0);
uniform vec2 anchor5 = vec2(0.0);
uniform vec2 anchor6 = vec2(0.0);

uniform vec2 move1 = vec2(0.0);
uniform vec2 move2 = vec2(0.0);
uniform vec2 move3 = vec2(0.0);
uniform vec2 move4 = vec2(0.0);
uniform vec2 move5 = vec2(0.0);
uniform vec2 move6 = vec2(0.0);

uniform float range1 = 0.0;
uniform float range2 = 0.0;
uniform float range3 = 0.0;
uniform float range4 = 0.0;
uniform float range5 = 0.0;
uniform float range6 = 0.0;

uniform float power = 1.0;


uniform vec4 target1color : hint_color;
uniform vec4 target2color : hint_color;
uniform vec4 target3color : hint_color;

uniform vec4 part1color : hint_color;
uniform vec4 part2color : hint_color;
uniform vec4 part3color : hint_color;

uniform sampler2D part1;
uniform sampler2D part2;
uniform sampler2D part3;

uniform float overlay = 0.7;

vec3 rgb2hsl(vec3 c )
{
    float epsilon = 0.00000001;
    float cmin = min( c.r, min( c.g, c.b ) );
    float cmax = max( c.r, max( c.g, c.b ) );
    float cd   = cmax - cmin;
    vec3 hsl = vec3(0.0);
    hsl.z = (cmax + cmin) / 2.0;
    hsl.y = mix(cd / (cmax + cmin + epsilon), cd / (epsilon + 2.0 - (cmax + cmin)), step(0.5, hsl.z));

    vec3 a = vec3(1.0 - step(epsilon, abs(cmax - c)));
    a = mix(vec3(a.x, 0.0, a.z), a, step(0.5, 2.0 - a.x - a.y));
    a = mix(vec3(a.x, a.y, 0.0), a, step(0.5, 2.0 - a.x - a.z));
    a = mix(vec3(a.x, a.y, 0.0), a, step(0.5, 2.0 - a.y - a.z));
    
    hsl.x = dot( vec3(0.0, 2.0, 4.0) + ((c.gbr - c.brg) / (epsilon + cd)), a );
    hsl.x = (hsl.x + (1.0 - step(0.0, hsl.x) ) * 6.0 ) / 6.0;
	hsl.y = clamp (hsl.y, 0.0, 1.0);
    return hsl;
}

vec3 hsl2rgb(vec3 HSL)
{
  float R = abs(HSL.x * 6.0 - 3.0) - 1.0;
  float G = 2.0 - abs(HSL.x * 6.0 - 2.0);
  float B = 2.0 - abs(HSL.x * 6.0 - 4.0);
  vec3 RGB = clamp(vec3(R,G,B), 0.0, 1.0);
  float C = (1.0 - abs(2.0 * HSL.z - 1.0)) * HSL.y;
  return (RGB - 0.5) * C + HSL.z;
}

void fragment(){
    vec4 color = texture(TEXTURE, UV);
	float a = color.a;
	vec3 t1 = rgb2hsl(target1color.rgb);
	vec3 t2 = rgb2hsl(target2color.rgb);
	vec3 t3 = rgb2hsl(target3color.rgb);
	vec3 k = rgb2hsl(color.rgb);
	if (texture(part1, UV).a > 0.0){
		vec3 dcolor = rgb2hsl(part1color.rgb);
		float rot = dcolor.x - t1.x;
		k.x = k.x + rot;
		if (k.x > 1.0) k.x -= 1.0;
		if (k.x < 0.0) k.x += 1.0;
		k.y = dcolor.y;
		k.z *= dcolor.z/t1.z;
		k.z = clamp(k.z, 0.0, 1.0);
//		k.z *= dcolor.z;
		k = hsl2rgb(k);
		k = mix(color.rgb, k, overlay * texture(part1, UV).a);
		color = vec4(k.xyz, a);
	}
	k = rgb2hsl(color.rgb);
	if (texture(part2, UV).a > 0.0){
		vec3 dcolor = rgb2hsl(part2color.rgb);
		float rot = dcolor.x - t2.x;
		k.x = k.x + rot;
		if (k.x > 1.0) k.x -= 1.0;
		if (k.x < 0.0) k.x += 1.0;
		k.y = dcolor.y;
		k.z *= dcolor.z / t2.z;
		k.z = clamp(k.z, 0.0, 1.0);
//		k.z *= dcolor.z;
		k = hsl2rgb(k);
		k = mix(color.rgb, k, overlay* texture(part2, UV).a);
		color = vec4(k.xyz, a);
	}
	k = rgb2hsl(color.rgb);
	if (texture(part3, UV).a > 0.0){
		vec3 dcolor = rgb2hsl(part3color.rgb);
		float rot = dcolor.x - t3.x;
		k.x = k.x + rot;
		if (k.x > 1.0) k.x -= 1.0;
		if (k.x < 0.0) k.x += 1.0;
		k.y = dcolor.y;
		k.z *= dcolor.z / t3.z;
		k.z = clamp(k.z, 0.0, 1.0);
//		k.z *= dcolor.z;
		k = hsl2rgb(k);
		k = mix(color.rgb, k, overlay * texture(part3, UV).a);
		color = vec4(k.xyz, a);
	}
	COLOR = color;
}

void vertex(){
	vec2 offset = vec2(0.0);
	float dist = length(VERTEX - anchor1);
	
	if (dist < range1){
		offset += move1 * (range1 - dist) * power / range1;
	}
	dist = length(VERTEX - anchor2);
	if (dist < range2){
		offset += move2 * (range2 - dist) * power / range2;
	}
	dist = length(VERTEX - anchor3);
	if (dist < range3){
		offset += move3 * (range3 - dist) * power / range3;
	}
	dist = length(VERTEX - anchor4);
	if (dist < range4){
		offset += move4 * (range4 - dist) * power / range4;
	}
	dist = length(VERTEX - anchor5);
	if (dist < range5){
		offset += move5 * (range5 - dist) * power / range5;
	}
	dist = length(VERTEX - anchor6);
	if (dist < range6){
		offset += move6 * (range6 - dist) * power / range6;
	}
	VERTEX += offset;
}"

[sub_resource type="ShaderMaterial" id=10]
shader = SubResource( 21 )
shader_param/anchor1 = Vector2( 436, 590 )
shader_param/anchor2 = Vector2( 365, 539 )
shader_param/anchor3 = Vector2( 519, 539 )
shader_param/anchor4 = Vector2( 0, 0 )
shader_param/anchor5 = Vector2( 0, 0 )
shader_param/anchor6 = Vector2( 0, 0 )
shader_param/move1 = Vector2( 0, 0 )
shader_param/move2 = Vector2( 0, 0 )
shader_param/move3 = Vector2( 0, 0 )
shader_param/move4 = Vector2( 0, 0 )
shader_param/move5 = Vector2( 0, 0 )
shader_param/move6 = Vector2( 0, 0 )
shader_param/range1 = 60.0
shader_param/range2 = 110.0
shader_param/range3 = 110.0
shader_param/range4 = 0
shader_param/range5 = 0
shader_param/range6 = 0
shader_param/power = 1.0
shader_param/target1color = Color( 1, 0, 0, 1 )
shader_param/target2color = Color( 1, 0, 0, 1 )
shader_param/target3color = Color( 1, 0, 0, 1 )
shader_param/part1color = Color( 1, 0, 0, 1 )
shader_param/part2color = Color( 1, 0, 0, 1 )
shader_param/part3color = Color( 0.184314, 0.419608, 0.223529, 1 )
shader_param/overlay = 0.7

[sub_resource type="ShaderMaterial" id=11]
shader = SubResource( 21 )
shader_param/anchor1 = Vector2( 436, 590 )
shader_param/anchor2 = Vector2( 365, 539 )
shader_param/anchor3 = Vector2( 519, 539 )
shader_param/anchor4 = Vector2( 0, 0 )
shader_param/anchor5 = Vector2( 0, 0 )
shader_param/anchor6 = Vector2( 0, 0 )
shader_param/move1 = Vector2( 0, 0 )
shader_param/move2 = Vector2( 0, 0 )
shader_param/move3 = Vector2( 0, 0 )
shader_param/move4 = Vector2( 0, 0 )
shader_param/move5 = Vector2( 0, 0 )
shader_param/move6 = Vector2( 0, 0 )
shader_param/range1 = 100.0
shader_param/range2 = 110.0
shader_param/range3 = 110.0
shader_param/range4 = 0
shader_param/range5 = 0
shader_param/range6 = 0
shader_param/power = 1.0
shader_param/target1color = Color( 1, 0, 0, 1 )
shader_param/target2color = Color( 1, 0, 0, 1 )
shader_param/target3color = Color( 1, 0, 0, 1 )
shader_param/part1color = Color( 1, 0, 0, 1 )
shader_param/part2color = Color( 1, 0, 0, 1 )
shader_param/part3color = Color( 1, 0, 0, 1 )
shader_param/overlay = 0.0

[sub_resource type="ShaderMaterial" id=12]
shader = ExtResource( 1 )
shader_param/target1color = Color( 0.792157, 0.831373, 0.0705882, 1 )
shader_param/target2color = Color( 0.14902, 0.584314, 0.0862745, 1 )
shader_param/target3color = Color( 0.14902, 0.584314, 0.0862745, 1 )
shader_param/part1color = Color( 0.14902, 0.584314, 0.0862745, 1 )
shader_param/part2color = Color( 0.177002, 0.566406, 0.456886, 1 )
shader_param/part3color = Color( 0.854902, 0.858824, 0.937255, 1 )
shader_param/overlay = 0.7

[sub_resource type="ShaderMaterial" id=13]
shader = ExtResource( 1 )
shader_param/target1color = Color( 0.831373, 0.623529, 0.623529, 1 )
shader_param/target2color = Color( 0.133333, 0.501961, 0.329412, 1 )
shader_param/target3color = Color( 0.133333, 0.2, 0.501961, 1 )
shader_param/part1color = Color( 0.133333, 0.2, 0.501961, 1 )
shader_param/part2color = Color( 0.133333, 0.2, 0.501961, 1 )
shader_param/part3color = Color( 0.133333, 0.2, 0.501961, 1 )
shader_param/overlay = 0.976
shader_param/part1 = ExtResource( 25 )
shader_param/part2 = ExtResource( 27 )
shader_param/part3 = ExtResource( 33 )

[sub_resource type="Shader" id=17]
code = "shader_type canvas_item;

uniform vec2 anchor1 = vec2(0.0);
uniform vec2 anchor2 = vec2(0.0);
uniform vec2 anchor3 = vec2(0.0);
uniform vec2 anchor4 = vec2(0.0);
uniform vec2 anchor5 = vec2(0.0);
uniform vec2 anchor6 = vec2(0.0);

uniform vec2 move1 = vec2(0.0);
uniform vec2 move2 = vec2(0.0);
uniform vec2 move3 = vec2(0.0);
uniform vec2 move4 = vec2(0.0);
uniform vec2 move5 = vec2(0.0);
uniform vec2 move6 = vec2(0.0);

uniform float range1 = 0.0;
uniform float range2 = 0.0;
uniform float range3 = 0.0;
uniform float range4 = 0.0;
uniform float range5 = 0.0;
uniform float range6 = 0.0;

uniform float power = 1.0;


uniform vec4 target1color : hint_color;
uniform vec4 target2color : hint_color;
uniform vec4 target3color : hint_color;

uniform vec4 part1color : hint_color;
uniform vec4 part2color : hint_color;
uniform vec4 part3color : hint_color;

uniform sampler2D part1;
uniform sampler2D part2;
uniform sampler2D part3;

uniform float overlay = 0.7;

vec3 rgb2hsl(vec3 c )
{
    float epsilon = 0.00000001;
    float cmin = min( c.r, min( c.g, c.b ) );
    float cmax = max( c.r, max( c.g, c.b ) );
    float cd   = cmax - cmin;
    vec3 hsl = vec3(0.0);
    hsl.z = (cmax + cmin) / 2.0;
    hsl.y = mix(cd / (cmax + cmin + epsilon), cd / (epsilon + 2.0 - (cmax + cmin)), step(0.5, hsl.z));

    vec3 a = vec3(1.0 - step(epsilon, abs(cmax - c)));
    a = mix(vec3(a.x, 0.0, a.z), a, step(0.5, 2.0 - a.x - a.y));
    a = mix(vec3(a.x, a.y, 0.0), a, step(0.5, 2.0 - a.x - a.z));
    a = mix(vec3(a.x, a.y, 0.0), a, step(0.5, 2.0 - a.y - a.z));
    
    hsl.x = dot( vec3(0.0, 2.0, 4.0) + ((c.gbr - c.brg) / (epsilon + cd)), a );
    hsl.x = (hsl.x + (1.0 - step(0.0, hsl.x) ) * 6.0 ) / 6.0;
	hsl.y = clamp (hsl.y, 0.0, 1.0);
    return hsl;
}

vec3 hsl2rgb(vec3 HSL)
{
  float R = abs(HSL.x * 6.0 - 3.0) - 1.0;
  float G = 2.0 - abs(HSL.x * 6.0 - 2.0);
  float B = 2.0 - abs(HSL.x * 6.0 - 4.0);
  vec3 RGB = clamp(vec3(R,G,B), 0.0, 1.0);
  float C = (1.0 - abs(2.0 * HSL.z - 1.0)) * HSL.y;
  return (RGB - 0.5) * C + HSL.z;
}

void fragment(){
    vec4 color = texture(TEXTURE, UV);
	float a = color.a;
	vec3 t1 = rgb2hsl(target1color.rgb);
	vec3 t2 = rgb2hsl(target2color.rgb);
	vec3 t3 = rgb2hsl(target3color.rgb);
	vec3 k = rgb2hsl(color.rgb);
	if (texture(part1, UV).a > 0.0){
		vec3 dcolor = rgb2hsl(part1color.rgb);
		float rot = dcolor.x - t1.x;
		k.x = k.x + rot;
		if (k.x > 1.0) k.x -= 1.0;
		if (k.x < 0.0) k.x += 1.0;
		k.y = dcolor.y;
		k.z *= dcolor.z/t1.z;
		k.z = clamp(k.z, 0.0, 1.0);
//		k.z *= dcolor.z;
		k = hsl2rgb(k);
		k = mix(color.rgb, k, overlay * texture(part1, UV).a);
		color = vec4(k.xyz, a);
	}
	k = rgb2hsl(color.rgb);
	if (texture(part2, UV).a > 0.0){
		vec3 dcolor = rgb2hsl(part2color.rgb);
		float rot = dcolor.x - t2.x;
		k.x = k.x + rot;
		if (k.x > 1.0) k.x -= 1.0;
		if (k.x < 0.0) k.x += 1.0;
		k.y = dcolor.y;
		k.z *= dcolor.z / t2.z;
		k.z = clamp(k.z, 0.0, 1.0);
//		k.z *= dcolor.z;
		k = hsl2rgb(k);
		k = mix(color.rgb, k, overlay* texture(part2, UV).a);
		color = vec4(k.xyz, a);
	}
	k = rgb2hsl(color.rgb);
	if (texture(part3, UV).a > 0.0){
		vec3 dcolor = rgb2hsl(part3color.rgb);
		float rot = dcolor.x - t3.x;
		k.x = k.x + rot;
		if (k.x > 1.0) k.x -= 1.0;
		if (k.x < 0.0) k.x += 1.0;
		k.y = dcolor.y;
		k.z *= dcolor.z / t3.z;
		k.z = clamp(k.z, 0.0, 1.0);
//		k.z *= dcolor.z;
		k = hsl2rgb(k);
		k = mix(color.rgb, k, overlay * texture(part3, UV).a);
		color = vec4(k.xyz, a);
	}
	COLOR = color;
}

void vertex(){
	vec2 offset = vec2(0.0);
	float dist = length(VERTEX - anchor1);
	
	if (dist < range1){
		offset += move1 * (range1 - dist) * power / range1;
	}
	dist = length(VERTEX - anchor2);
	if (dist < range2){
		offset += move2 * (range2 - dist) * power / range2;
	}
	dist = length(VERTEX - anchor3);
	if (dist < range3){
		offset += move3 * (range3 - dist) * power / range3;
	}
	dist = length(VERTEX - anchor4);
	if (dist < range4){
		offset += move4 * (range4 - dist) * power / range4;
	}
	dist = length(VERTEX - anchor5);
	if (dist < range5){
		offset += move5 * (range5 - dist) * power / range5;
	}
	dist = length(VERTEX - anchor6);
	if (dist < range6){
		offset += move6 * (range6 - dist) * power / range6;
	}
	VERTEX += offset;
}"

[sub_resource type="ShaderMaterial" id=18]
shader = SubResource( 17 )
shader_param/anchor1 = Vector2( 361, 478 )
shader_param/anchor2 = Vector2( 520, 478 )
shader_param/anchor3 = Vector2( 0, 0 )
shader_param/anchor4 = Vector2( 0, 0 )
shader_param/anchor5 = Vector2( 0, 0 )
shader_param/anchor6 = Vector2( 0, 0 )
shader_param/move1 = Vector2( 0, 0 )
shader_param/move2 = Vector2( 0, 0 )
shader_param/move3 = Vector2( 0, 0 )
shader_param/move4 = Vector2( 0, 0 )
shader_param/move5 = Vector2( 0, 0 )
shader_param/move6 = Vector2( 0, 0 )
shader_param/range1 = 200.0
shader_param/range2 = 200.0
shader_param/range3 = 0
shader_param/range4 = 0
shader_param/range5 = 0
shader_param/range6 = 0
shader_param/power = 1.0
shader_param/target1color = Color( 1, 0, 0, 1 )
shader_param/target2color = Color( 1, 0, 0, 1 )
shader_param/target3color = Color( 1, 0, 0, 1 )
shader_param/part1color = Color( 1, 0, 0, 1 )
shader_param/part2color = Color( 0.423529, 0.631373, 0.635294, 1 )
shader_param/part3color = Color( 0.0941176, 0.101961, 0.227451, 1 )
shader_param/overlay = 0.7
shader_param/part2 = ExtResource( 26 )
shader_param/part3 = ExtResource( 48 )

[sub_resource type="ShaderMaterial" id=16]
shader = ExtResource( 1 )
shader_param/target1color = Color( 0.14902, 0.2, 0.509804, 1 )
shader_param/target2color = Color( 0.14902, 0.2, 0.509804, 1 )
shader_param/target3color = Color( 0.14902, 0.2, 0.509804, 1 )
shader_param/part1color = Color( 0.14902, 0.2, 0.509804, 1 )
shader_param/part2color = Color( 0.176471, 0.176471, 0.152941, 1 )
shader_param/part3color = Color( 0.419608, 0.564706, 0.643137, 1 )
shader_param/overlay = 0.952
shader_param/part1 = ExtResource( 32 )

[node name="Female_pose1" type="Node2D"]

[node name="HumanF1" type="Skeleton2D" parent="."]
position = Vector2( 1, 8 )

[node name="Spine" type="Bone2D" parent="HumanF1"]
material = SubResource( 1 )
position = Vector2( -50, -942 )
rotation = 1.5708
rest = Transform2D( 0.005, 0, 0, 0, 0, 0 )
default_length = 100.0

[node name="Hairs_back_mesh" type="Polygon2D" parent="HumanF1/Spine"]
material = SubResource( 20 )
position = Vector2( -534.998, 435.002 )
rotation = -1.5708
offset = Vector2( 0, -1 )
texture = ExtResource( 11 )
polygon = PoolVector2Array( 226.361, 214.538, 216.712, 286.468, 211.449, 369.801, 214.081, 448.748, 237.765, 542.608, 282.502, 625.941, 332.502, 659.275, 398.291, 661.906, 447.414, 657.52, 487.765, 660.152, 557.94, 659.275, 598.291, 630.327, 647.414, 554.889, 681.625, 469.801, 700.046, 373.31, 695.66, 287.345, 671.975, 205.766, 622.853, 153.134, 552.677, 125.941, 472.853, 119.801, 400.923, 119.801, 327.239, 136.468, 268.467, 158.397, 361.449, 185.59, 339.519, 229.45, 333.379, 269.801, 330.747, 317.169, 332.502, 373.31, 333.379, 420.678, 332.502, 474.187, 333.379, 529.45, 334.256, 589.099, 381.625, 172.432, 422.853, 159.275, 450.923, 162.783, 517.589, 175.064, 547.414, 204.011, 551.8, 239.099, 558.818, 289.976, 561.449, 347.871, 553.554, 412.783, 550.046, 466.292, 544.782, 537.345, 538.642, 594.362, 442.151, 225.064, 464.958, 261.029, 493.028, 295.239, 502.677, 344.362, 501.8, 401.38, 499.168, 457.52, 499.168, 506.643, 494.782, 561.029, 490.396, 603.134, 416.712, 232.082, 400.923, 275.941, 393.028, 300.503, 390.396, 350.503, 390.396, 415.415, 387.765, 454.889, 385.133, 500.503, 382.502, 548.748, 382.502, 590.854, 293.028, 212.783, 280.747, 271.555, 276.361, 325.941, 275.484, 382.959, 276.361, 444.362, 278.993, 511.906, 286.888, 567.169, 299.168, 609.275, 599.168, 202.257, 621.975, 260.152, 631.625, 311.029, 638.642, 366.292, 632.502, 436.468, 615.835, 489.976, 599.168, 539.976, 580.747, 584.713, 448.291, 191.731, 485.133, 206.643, 508.818, 227.696, 526.361, 261.029, 533.379, 304.011, 533.379, 347.871, 533.379, 392.608, 530.747, 432.082, 524.607, 465.415, 413.203, 198.748, 386.888, 223.31, 369.344, 257.52, 363.203, 287.345, 359.695, 332.959, 359.695, 375.064, 363.203, 410.152, 367.589, 446.117, 619.344, 186.468, 650.923, 239.976, 663.203, 289.976, 664.958, 355.766, 658.818, 419.801, 647.414, 482.082, 626.361, 536.468, 600.923, 582.959, 575.484, 619.801, 278.993, 193.485, 258.818, 254.011, 249.168, 306.643, 252.677, 379.45, 254.432, 440.854, 257.063, 486.468, 262.326, 539.976, 278.993, 593.485, 330.747, 202.257, 313.203, 277.696, 305.309, 329.45, 307.063, 389.099, 307.063, 447.871, 314.081, 493.485, 318.467, 545.24, 318.467, 587.345, 573.73, 206.643, 588.642, 261.906, 600.923, 332.082, 602.677, 370.678, 594.782, 453.134, 579.87, 501.38, 558.818, 563.661, 438.642, 267.169, 443.028, 322.432, 443.905, 371.555, 445.66, 413.661, 443.905, 451.38, 443.905, 492.608, 442.151, 539.099, 441.274, 575.064, 439.519, 610.152, 581.625, 176.818, 538.642, 150.503, 505.309, 145.239, 443.905, 139.099, 403.554, 141.731, 353.554, 153.134, 319.344, 170.678, 468.467, 306.643, 471.098, 345.239, 474.607, 393.485, 472.853, 439.099, 471.975, 477.696, 470.221, 525.064, 467.589, 570.678, 464.958, 616.292, 420.221, 311.029, 417.589, 346.994, 415.835, 393.485, 412.326, 434.713, 411.449, 482.082, 412.326, 521.555, 413.203, 559.275, 412.326, 598.748, 597.414, 414.538, 635.133, 395.239, 358.818, 488.222, 358.818, 535.59, 358.818, 588.222, 361.449, 633.836, 517.589, 635.59, 522.853, 523.31, 520.221, 558.397, 456.186, 211.906, 484.256, 236.468, 499.168, 264.538, 513.203, 302.257, 520.221, 344.362, 518.467, 384.713, 515.835, 422.432, 514.081, 465.415, 406.186, 225.064, 386.888, 267.169, 375.484, 296.117, 374.607, 333.836, 380.747, 383.836, 408.818, 183.836, 378.116, 205.766, 364.081, 229.45, 354.432, 265.415, 349.168, 296.117, 347.414, 342.608, 347.414, 379.45, 476.361, 186.468, 512.326, 204.889, 539.519, 246.994, 546.537, 286.468, 549.168, 333.836, 545.66, 361.906 )
uv = PoolVector2Array( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 )
polygons = [ [ 8, 7, 9 ], [ 5, 6, 69 ], [ 34, 33, 78 ], [ 41, 40, 85 ], [ 40, 84, 85 ], [ 41, 85, 86 ], [ 53, 44, 87 ], [ 44, 78, 87 ], [ 28, 29, 94 ], [ 93, 28, 94 ], [ 58, 57, 94 ], [ 57, 93, 94 ], [ 16, 17, 95 ], [ 15, 16, 96 ], [ 70, 71, 96 ], [ 95, 70, 96 ], [ 16, 95, 96 ], [ 71, 72, 97 ], [ 15, 96, 97 ], [ 96, 71, 97 ], [ 14, 15, 98 ], [ 15, 97, 98 ], [ 72, 73, 98 ], [ 97, 72, 98 ], [ 13, 14, 99 ], [ 74, 13, 99 ], [ 14, 98, 99 ], [ 12, 13, 100 ], [ 13, 74, 100 ], [ 74, 75, 100 ], [ 75, 76, 101 ], [ 12, 100, 101 ], [ 100, 75, 101 ], [ 11, 12, 102 ], [ 76, 77, 102 ], [ 12, 101, 102 ], [ 101, 76, 102 ], [ 10, 11, 103 ], [ 77, 43, 103 ], [ 11, 102, 103 ], [ 102, 77, 103 ], [ 22, 0, 104 ], [ 0, 1, 105 ], [ 63, 62, 105 ], [ 62, 104, 105 ], [ 104, 0, 105 ], [ 1, 2, 106 ], [ 64, 63, 106 ], [ 63, 105, 106 ], [ 105, 1, 106 ], [ 2, 3, 107 ], [ 65, 64, 107 ], [ 64, 106, 107 ], [ 106, 2, 107 ], [ 107, 3, 108 ], [ 66, 65, 108 ], [ 65, 107, 108 ], [ 3, 4, 109 ], [ 108, 3, 109 ], [ 66, 108, 109 ], [ 67, 109, 110 ], [ 109, 4, 110 ], [ 4, 5, 111 ], [ 5, 69, 111 ], [ 68, 110, 111 ], [ 110, 4, 111 ], [ 62, 24, 112 ], [ 25, 24, 113 ], [ 24, 62, 113 ], [ 62, 63, 113 ], [ 63, 64, 113 ], [ 64, 65, 114 ], [ 26, 113, 114 ], [ 113, 64, 114 ], [ 28, 27, 115 ], [ 65, 66, 115 ], [ 27, 114, 115 ], [ 114, 65, 115 ], [ 29, 28, 116 ], [ 28, 115, 116 ], [ 115, 66, 116 ], [ 29, 116, 117 ], [ 66, 109, 117 ], [ 116, 66, 117 ], [ 109, 67, 117 ], [ 67, 110, 118 ], [ 110, 68, 118 ], [ 30, 117, 118 ], [ 117, 67, 118 ], [ 69, 31, 119 ], [ 68, 111, 119 ], [ 111, 69, 119 ], [ 31, 118, 119 ], [ 118, 68, 119 ], [ 36, 37, 120 ], [ 37, 38, 121 ], [ 72, 71, 121 ], [ 120, 37, 121 ], [ 71, 70, 121 ], [ 70, 120, 121 ], [ 73, 72, 122 ], [ 72, 121, 122 ], [ 121, 38, 122 ], [ 73, 122, 123 ], [ 122, 39, 123 ], [ 40, 41, 124 ], [ 75, 74, 124 ], [ 42, 76, 125 ], [ 76, 75, 125 ], [ 75, 124, 125 ], [ 124, 41, 125 ], [ 43, 77, 126 ], [ 76, 42, 126 ], [ 77, 76, 126 ], [ 45, 44, 127 ], [ 44, 53, 127 ], [ 53, 54, 127 ], [ 7, 8, 135 ], [ 70, 95, 136 ], [ 95, 17, 136 ], [ 17, 18, 136 ], [ 120, 70, 136 ], [ 36, 120, 136 ], [ 136, 18, 137 ], [ 35, 36, 137 ], [ 36, 136, 137 ], [ 19, 34, 138 ], [ 18, 19, 138 ], [ 137, 18, 138 ], [ 35, 137, 138 ], [ 19, 20, 139 ], [ 33, 34, 139 ], [ 34, 19, 139 ], [ 33, 139, 140 ], [ 139, 20, 140 ], [ 23, 32, 141 ], [ 20, 21, 141 ], [ 140, 20, 141 ], [ 32, 140, 141 ], [ 21, 22, 142 ], [ 22, 104, 142 ], [ 104, 62, 142 ], [ 62, 112, 142 ], [ 141, 21, 142 ], [ 112, 23, 142 ], [ 23, 141, 142 ], [ 47, 46, 143 ], [ 46, 45, 143 ], [ 45, 127, 143 ], [ 127, 128, 143 ], [ 128, 129, 144 ], [ 47, 143, 144 ], [ 143, 128, 144 ], [ 129, 130, 145 ], [ 47, 144, 145 ], [ 144, 129, 145 ], [ 130, 131, 146 ], [ 48, 145, 146 ], [ 145, 130, 146 ], [ 131, 132, 147 ], [ 49, 146, 147 ], [ 146, 131, 147 ], [ 51, 50, 148 ], [ 132, 133, 148 ], [ 50, 147, 148 ], [ 147, 132, 148 ], [ 52, 51, 149 ], [ 133, 134, 149 ], [ 51, 148, 149 ], [ 148, 133, 149 ], [ 8, 9, 150 ], [ 9, 52, 150 ], [ 135, 8, 150 ], [ 134, 135, 150 ], [ 149, 134, 150 ], [ 52, 149, 150 ], [ 54, 55, 151 ], [ 127, 54, 151 ], [ 128, 127, 151 ], [ 129, 128, 152 ], [ 128, 151, 152 ], [ 151, 56, 152 ], [ 130, 129, 153 ], [ 152, 56, 153 ], [ 129, 152, 153 ], [ 57, 58, 154 ], [ 131, 130, 154 ], [ 130, 153, 154 ], [ 153, 57, 154 ], [ 58, 59, 155 ], [ 132, 131, 155 ], [ 131, 154, 155 ], [ 154, 58, 155 ], [ 59, 60, 156 ], [ 155, 59, 156 ], [ 133, 132, 156 ], [ 132, 155, 156 ], [ 60, 61, 157 ], [ 134, 133, 157 ], [ 133, 156, 157 ], [ 156, 60, 157 ], [ 7, 135, 158 ], [ 135, 134, 158 ], [ 134, 157, 158 ], [ 157, 61, 158 ], [ 124, 74, 159 ], [ 123, 40, 159 ], [ 40, 124, 159 ], [ 98, 73, 160 ], [ 99, 98, 160 ], [ 74, 99, 160 ], [ 159, 74, 160 ], [ 73, 123, 160 ], [ 123, 159, 160 ], [ 94, 29, 161 ], [ 59, 58, 161 ], [ 58, 94, 161 ], [ 29, 117, 161 ], [ 117, 30, 161 ], [ 60, 59, 162 ], [ 30, 118, 162 ], [ 118, 31, 162 ], [ 59, 161, 162 ], [ 161, 30, 162 ], [ 61, 60, 163 ], [ 60, 162, 163 ], [ 162, 31, 163 ], [ 6, 7, 164 ], [ 31, 69, 164 ], [ 69, 6, 164 ], [ 7, 158, 164 ], [ 158, 61, 164 ], [ 163, 31, 164 ], [ 61, 163, 164 ], [ 9, 10, 165 ], [ 43, 52, 165 ], [ 52, 9, 165 ], [ 10, 103, 165 ], [ 103, 43, 165 ], [ 50, 51, 166 ], [ 41, 86, 166 ], [ 86, 50, 166 ], [ 42, 125, 166 ], [ 125, 41, 166 ], [ 51, 52, 167 ], [ 52, 43, 167 ], [ 126, 42, 167 ], [ 43, 126, 167 ], [ 42, 166, 167 ], [ 166, 51, 167 ], [ 78, 44, 168 ], [ 80, 79, 169 ], [ 44, 45, 169 ], [ 168, 44, 169 ], [ 79, 168, 169 ], [ 45, 46, 170 ], [ 169, 45, 170 ], [ 81, 80, 170 ], [ 80, 169, 170 ], [ 46, 47, 171 ], [ 81, 170, 171 ], [ 170, 46, 171 ], [ 171, 47, 172 ], [ 82, 171, 172 ], [ 48, 84, 173 ], [ 47, 145, 173 ], [ 145, 48, 173 ], [ 172, 47, 173 ], [ 83, 172, 173 ], [ 49, 85, 174 ], [ 84, 48, 174 ], [ 85, 84, 174 ], [ 48, 146, 174 ], [ 146, 49, 174 ], [ 50, 86, 175 ], [ 85, 49, 175 ], [ 86, 85, 175 ], [ 49, 147, 175 ], [ 147, 50, 175 ], [ 53, 87, 176 ], [ 87, 88, 176 ], [ 89, 90, 177 ], [ 54, 53, 177 ], [ 53, 176, 177 ], [ 88, 89, 177 ], [ 176, 88, 177 ], [ 55, 54, 178 ], [ 54, 177, 178 ], [ 177, 90, 178 ], [ 92, 56, 179 ], [ 56, 151, 179 ], [ 151, 55, 179 ], [ 55, 178, 179 ], [ 178, 91, 179 ], [ 92, 93, 180 ], [ 93, 57, 180 ], [ 56, 92, 180 ], [ 153, 56, 180 ], [ 57, 153, 180 ], [ 78, 33, 181 ], [ 87, 78, 181 ], [ 33, 140, 181 ], [ 140, 32, 181 ], [ 32, 23, 182 ], [ 181, 32, 182 ], [ 88, 87, 182 ], [ 87, 181, 182 ], [ 89, 88, 183 ], [ 88, 182, 183 ], [ 23, 112, 183 ], [ 182, 23, 183 ], [ 112, 24, 183 ], [ 24, 25, 184 ], [ 90, 89, 184 ], [ 89, 183, 184 ], [ 183, 24, 184 ], [ 26, 91, 185 ], [ 25, 113, 185 ], [ 113, 26, 185 ], [ 91, 178, 185 ], [ 178, 90, 185 ], [ 90, 184, 185 ], [ 184, 25, 185 ], [ 91, 26, 186 ], [ 26, 114, 186 ], [ 114, 27, 186 ], [ 92, 179, 186 ], [ 179, 91, 186 ], [ 27, 28, 187 ], [ 28, 93, 187 ], [ 93, 92, 187 ], [ 92, 186, 187 ], [ 186, 27, 187 ], [ 34, 78, 188 ], [ 35, 138, 188 ], [ 138, 34, 188 ], [ 78, 168, 188 ], [ 168, 79, 188 ], [ 36, 35, 189 ], [ 80, 36, 189 ], [ 79, 80, 189 ], [ 35, 188, 189 ], [ 188, 79, 189 ], [ 37, 36, 190 ], [ 36, 80, 190 ], [ 80, 81, 190 ], [ 82, 38, 191 ], [ 81, 171, 191 ], [ 171, 82, 191 ], [ 38, 37, 191 ], [ 37, 190, 191 ], [ 190, 81, 191 ], [ 38, 82, 192 ], [ 83, 39, 192 ], [ 39, 122, 192 ], [ 122, 38, 192 ], [ 82, 172, 192 ], [ 172, 83, 192 ], [ 84, 40, 193 ], [ 39, 83, 193 ], [ 40, 123, 193 ], [ 123, 39, 193 ], [ 83, 173, 193 ], [ 173, 84, 193 ] ]
internal_vertex_count = 171
script = ExtResource( 59 )
auto_poly = true
copy_uvs = null

[node name="Position2D" type="Position2D" parent="HumanF1/Spine/Hairs_back_mesh"]
position = Vector2( 328.001, 387.999 )
script = ExtResource( 60 )
__meta__ = {
"_gizmo_extents_": 200.0
}
anchor = Vector2( 328.001, 387.999 )
lock_anchor_position = true

[node name="Position2D2" type="Position2D" parent="HumanF1/Spine/Hairs_back_mesh"]
position = Vector2( 567.001, 387.998 )
script = ExtResource( 60 )
__meta__ = {
"_gizmo_extents_": 200.0
}
anchor = Vector2( 567.001, 387.998 )
lock_anchor_position = true

[node name="Position2D3" type="Position2D" parent="HumanF1/Spine/Hairs_back_mesh"]
visible = false
position = Vector2( 239, -84 )
script = ExtResource( 60 )
__meta__ = {
"_gizmo_extents_": 200.0
}
anchor = Vector2( 442, 213 )

[node name="Position2D4" type="Position2D" parent="HumanF1/Spine/Hairs_back_mesh"]
visible = false
position = Vector2( 55, -63 )
script = ExtResource( 60 )
__meta__ = {
"_gizmo_extents_": 100.0
}
anchor = Vector2( 449, 369 )

[node name="Position2D5" type="Position2D" parent="HumanF1/Spine/Hairs_back_mesh"]
visible = false
script = ExtResource( 60 )

[node name="Position2D6" type="Position2D" parent="HumanF1/Spine/Hairs_back_mesh"]
visible = false
script = ExtResource( 60 )

[node name="Animal_body" type="Sprite" parent="HumanF1/Spine"]
visible = false
material = SubResource( 4 )
position = Vector2( 205.814, 1.4191 )
rotation = -1.5708
texture = ExtResource( 50 )

[node name="Animal_taz" type="Sprite" parent="HumanF1/Spine/Animal_body"]
material = SubResource( 5 )
position = Vector2( 3.05176e-05, 0 )
texture = ExtResource( 57 )

[node name="Animal_body_assist" type="Sprite" parent="HumanF1/Spine/Animal_body"]
material = SubResource( 4 )
position = Vector2( -1.24982, -0.248962 )
texture = ExtResource( 46 )

[node name="Wings_tex" type="Sprite" parent="HumanF1/Spine"]
visible = false
material = SubResource( 6 )
position = Vector2( 174.243, -14.1279 )
rotation = -1.5708
scale = Vector2( 1, 0.8 )
texture = ExtResource( 2 )

[node name="Tail_tex" type="Sprite" parent="HumanF1/Spine"]
material = SubResource( 6 )
position = Vector2( 205, 2.99924 )
rotation = -1.5708
texture = ExtResource( 10 )

[node name="ShoulderR" type="Bone2D" parent="HumanF1/Spine"]
position = Vector2( -88.0003, -92.9996 )
rotation = -0.783653
rest = Transform2D( 0.001, 0, 0, 0, 0, 0 )
default_length = 100.0

[node name="ShoulderR_races" type="Sprite" parent="HumanF1/Spine/ShoulderR"]
visible = false
material = SubResource( 8 )
position = Vector2( 327, 100.999 )
rotation = -1.5708
texture = ExtResource( 45 )

[node name="ArmR" type="Bone2D" parent="HumanF1/Spine/ShoulderR"]
position = Vector2( 220, -11.0008 )
rotation = 1.87099
rest = Transform2D( 0.008, 0, 0, 0, 0, 0 )
default_length = 100.0

[node name="HandR" type="Bone2D" parent="HumanF1/Spine/ShoulderR/ArmR"]
position = Vector2( 138.298, -33.2469 )
rotation = -0.127409
rest = Transform2D( 0.008, 0, 0, 0, 0, 0 )
default_length = 100.0

[node name="HandR_tex" type="Sprite" parent="HumanF1/Spine/ShoulderR/ArmR/HandR"]
material = SubResource( 8 )
position = Vector2( -36.9996, 145.789 )
rotation = -1.5708
texture = ExtResource( 12 )

[node name="HandR_armor" type="Sprite" parent="HumanF1/Spine/ShoulderR/ArmR/HandR"]
position = Vector2( -36.052, 145.152 )
rotation = -1.5708
texture = ExtResource( 23 )

[node name="ArmR_tex" type="Sprite" parent="HumanF1/Spine/ShoulderR/ArmR"]
material = SubResource( 8 )
position = Vector2( 105.579, 111.473 )
rotation = -1.5708
texture = ExtResource( 6 )

[node name="ArmR_armor" type="Sprite" parent="HumanF1/Spine/ShoulderR/ArmR"]
position = Vector2( -111.421, 120.474 )
rotation = -1.5708
texture = ExtResource( 8 )

[node name="ShoulderR_tex" type="Sprite" parent="HumanF1/Spine/ShoulderR"]
material = SubResource( 8 )
position = Vector2( 327, 100.999 )
rotation = -1.5708
texture = ExtResource( 3 )

[node name="ShoulderR_armor" type="Sprite" parent="HumanF1/Spine/ShoulderR"]
position = Vector2( 109, 110 )
rotation = -1.5708
texture = ExtResource( 29 )

[node name="ShoulderL" type="Bone2D" parent="HumanF1/Spine"]
position = Vector2( -91.9997, 88.0004 )
rotation = 0.877901
rest = Transform2D( 0.008, 0, 0, 0, 0, 0 )
default_length = 100.0

[node name="ShoulderL_races" type="Sprite" parent="HumanF1/Spine/ShoulderL"]
visible = false
material = SubResource( 8 )
position = Vector2( 318, -105.001 )
rotation = -1.5708
texture = ExtResource( 54 )

[node name="ArmL" type="Bone2D" parent="HumanF1/Spine/ShoulderL"]
position = Vector2( 198.431, -1.41211 )
rotation = -1.83958
rest = Transform2D( 0.008, 0, 0, 0, 0, 0 )
default_length = 100.0

[node name="HandL" type="Bone2D" parent="HumanF1/Spine/ShoulderL/ArmL"]
position = Vector2( 136.842, 21.0521 )
rest = Transform2D( 0.008, 0, 0, 0, 0, 0 )
default_length = 100.0

[node name="HandL_tex" type="Sprite" parent="HumanF1/Spine/ShoulderL/ArmL/HandL"]
material = SubResource( 8 )
position = Vector2( -42.1053, -120.684 )
rotation = -1.5708
texture = ExtResource( 5 )

[node name="HandL_armor" type="Sprite" parent="HumanF1/Spine/ShoulderL/ArmL/HandL"]
position = Vector2( -42.1053, -120.684 )
rotation = -1.5708
texture = ExtResource( 20 )

[node name="ArmL_tex" type="Sprite" parent="HumanF1/Spine/ShoulderL/ArmL"]
material = SubResource( 8 )
position = Vector2( 91.7367, -99.6318 )
rotation = -1.5708
texture = ExtResource( 4 )

[node name="ArmL_armor" type="Sprite" parent="HumanF1/Spine/ShoulderL/ArmL"]
position = Vector2( 92.7366, -98.6318 )
rotation = -1.5708
texture = ExtResource( 56 )

[node name="ShoulderL_tex" type="Sprite" parent="HumanF1/Spine/ShoulderL"]
material = SubResource( 8 )
position = Vector2( 318, -105.001 )
rotation = -1.5708
texture = ExtResource( 35 )

[node name="ShoulderL_armor" type="Sprite" parent="HumanF1/Spine/ShoulderL"]
position = Vector2( 319, -105.001 )
rotation = -1.5708
texture = ExtResource( 52 )

[node name="Torso_tex2" type="Sprite" parent="HumanF1/Spine"]
material = SubResource( 8 )
position = Vector2( 222, -0.000823975 )
rotation = -1.5708
texture = ExtResource( 15 )

[node name="Torso_races" type="Sprite" parent="HumanF1/Spine"]
visible = false
material = SubResource( 8 )
position = Vector2( 222, 1.05865 )
rotation = -1.5708
texture = ExtResource( 38 )

[node name="Belly_default_tex" type="Sprite" parent="HumanF1/Spine"]
light_mask = 0
material = SubResource( 8 )
position = Vector2( 219, -1.00079 )
rotation = -1.5708
texture = ExtResource( 13 )

[node name="Taz" type="Bone2D" parent="HumanF1/Spine"]
position = Vector2( 206, 4.99927 )
rotation = 0.146608
rest = Transform2D( 0.008, 0, 0, 0, 0, 0 )
default_length = 100.0

[node name="LegL" type="Bone2D" parent="HumanF1/Spine/Taz"]
position = Vector2( 93.3998, 77.1131 )
rotation = -0.1309
scale = Vector2( 1, 0.97 )
rest = Transform2D( 0.008, 0, 0, 0, 0, 0 )
default_length = 100.0

[node name="LegL_races" type="Sprite" parent="HumanF1/Spine/Taz/LegL"]
visible = false
material = SubResource( 8 )
position = Vector2( -102.26, -83.4431 )
rotation = -1.5708
texture = ExtResource( 55 )

[node name="LegL_tex" type="Sprite" parent="HumanF1/Spine/Taz/LegL"]
material = SubResource( 8 )
position = Vector2( -102.019, -82.549 )
rotation = -1.5708
texture = ExtResource( 30 )

[node name="LegL_armor" type="Sprite" parent="HumanF1/Spine/Taz/LegL"]
position = Vector2( -103.001, -82.549 )
rotation = -1.5708
texture = ExtResource( 51 )

[node name="LegR" type="Bone2D" parent="HumanF1/Spine/Taz"]
position = Vector2( 90.5117, -46.5284 )
rotation = -0.417134
scale = Vector2( 1, 0.99 )
rest = Transform2D( 0.008, 0, 0, 0, 0, 0 )
default_length = 100.0

[node name="LegR_races" type="Sprite" parent="HumanF1/Spine/Taz/LegR"]
visible = false
material = SubResource( 8 )
position = Vector2( -101.986, 42.5403 )
rotation = -1.5708
texture = ExtResource( 41 )

[node name="LegR_tex" type="Sprite" parent="HumanF1/Spine/Taz/LegR"]
material = SubResource( 8 )
position = Vector2( -101.986, 42.5403 )
rotation = -1.5708
texture = ExtResource( 39 )

[node name="LegR_armor" type="Sprite" parent="HumanF1/Spine/Taz/LegR"]
position = Vector2( -102.155, 43.3673 )
rotation = -1.5708
texture = ExtResource( 21 )

[node name="Taz_tex" type="Sprite" parent="HumanF1/Spine/Taz"]
material = SubResource( 8 )
position = Vector2( -2, 0 )
rotation = -1.5708
texture = ExtResource( 36 )

[node name="Taz_races" type="Sprite" parent="HumanF1/Spine/Taz"]
visible = false
material = SubResource( 8 )
position = Vector2( -1.15967, 0.226257 )
rotation = -1.5708
texture = ExtResource( 34 )

[node name="Dick" type="Bone2D" parent="HumanF1/Spine/Taz"]
visible = false
position = Vector2( 61.228, 9.8699 )
rotation = -0.146608
scale = Vector2( 1, 0.952381 )
rest = Transform2D( 0.008, 0, 0, 0, 0, 0 )
default_length = 100.0

[node name="Testicles_tex" type="Sprite" parent="HumanF1/Spine/Taz/Dick"]
material = SubResource( 5 )
position = Vector2( -287.93, -10.6528 )
rotation = -1.5708
texture = ExtResource( 28 )

[node name="Penis_tex" type="Sprite" parent="HumanF1/Spine/Taz/Dick"]
material = SubResource( 1 )
position = Vector2( -70.7006, -13.7388 )
rotation = -1.5708
texture = ExtResource( 53 )

[node name="Taz_armor" type="Sprite" parent="HumanF1/Spine/Taz"]
visible = false
position = Vector2( -221.937, 5.96686 )
rotation = -1.5708
texture = ExtResource( 14 )

[node name="Torso_nipple_tex" type="Sprite" parent="HumanF1/Spine"]
material = SubResource( 8 )
position = Vector2( 221, -0.000854492 )
rotation = -1.5708
texture = ExtResource( 43 )

[node name="Torso_armor_tex" type="Sprite" parent="HumanF1/Spine"]
visible = false
position = Vector2( 6.00006, 10.9999 )
rotation = -1.5708
texture = ExtResource( 18 )

[node name="Pregnancy" type="Bone2D" parent="HumanF1/Spine"]
visible = false
position = Vector2( 135, 12.9995 )
rest = Transform2D( 0.017, 0, 0, 0, 0, 0 )

[node name="Belly_pregnancy_tex" type="Sprite" parent="HumanF1/Spine/Pregnancy"]
material = SubResource( 8 )
position = Vector2( 59.9999, -13.0002 )
rotation = -1.5708
texture = ExtResource( 19 )

[node name="pregnancy_armor_tex" type="Sprite" parent="HumanF1/Spine/Pregnancy"]
position = Vector2( -155, -12.9995 )
rotation = -1.5708
texture = ExtResource( 9 )

[node name="Tits" type="Bone2D" parent="HumanF1/Spine"]
position = Vector2( -53, 10.0002 )
rest = Transform2D( 0.008, 0, 0, 0, 0, 0 )
default_length = 100.0

[node name="Tits_mesh" type="Polygon2D" parent="HumanF1/Spine/Tits"]
material = SubResource( 8 )
position = Vector2( -481.999, 427.002 )
rotation = -1.5708
offset = Vector2( 0, -1 )
texture = ExtResource( 17 )
polygon = PoolVector2Array( 367.066, 465.196, 359.895, 471.173, 354.317, 475.953, 348.739, 485.515, 340.771, 495.077, 334.795, 503.443, 330.811, 511.81, 326.827, 518.981, 324.038, 528.145, 322.843, 537.308, 322.046, 546.87, 323.64, 555.635, 324.835, 563.603, 327.624, 570.774, 330.811, 577.547, 336.389, 583.922, 342.763, 589.898, 348.739, 594.28, 358.301, 598.264, 366.668, 600.256, 378.62, 601.053, 388.58, 599.459, 399.337, 597.069, 408.102, 594.28, 418.062, 593.085, 425.233, 593.085, 433.202, 593.085, 444.755, 595.077, 454.716, 595.874, 463.48, 597.467, 472.245, 599.061, 481.409, 600.256, 492.963, 601.451, 500.532, 601.451, 509.297, 600.256, 520.054, 598.663, 529.616, 593.483, 536.787, 588.304, 543.959, 579.938, 549.138, 571.571, 553.52, 564.001, 555.911, 554.041, 556.309, 544.081, 556.309, 533.324, 553.122, 521.372, 548.739, 510.615, 543.56, 501.053, 539.576, 492.288, 533.6, 485.117, 525.632, 476.352, 516.469, 469.181, 506.508, 463.603, 500.134, 461.611, 506.508, 463.603, 491.369, 460.017, 477.026, 459.22, 461.887, 458.424, 449.536, 458.025, 439.576, 457.228, 426.429, 457.627, 416.07, 458.025, 400.532, 457.228, 386.19, 457.627, 374.237, 461.212, 352.724, 538.503, 529.218, 539.3, 518.859, 524.161, 512.883, 528.941, 510.094, 538.902, 511.289, 549.26, 518.062, 552.846, 528.022, 555.635, 535.99, 554.041, 541.967, 545.276, 543.162, 535.714, 539.178, 526.153, 530.413, 522.567, 346.349, 520.575, 337.584, 525.356, 334.397, 536.113, 335.194, 545.675, 341.17, 552.846, 350.731, 556.83, 361.09, 555.236, 368.261, 550.455, 369.855, 539.698, 367.465, 528.543, 357.903, 521.77, 336.389, 514.599, 343.56, 509.021, 353.919, 505.435, 369.457, 506.631, 380.612, 512.607, 389.377, 523.762, 393.361, 539.3, 390.971, 551.651, 384.994, 564.4, 373.042, 569.977, 361.09, 573.165, 346.747, 570.774, 333.998, 564.001, 329.616, 554.838, 348.341, 495.077, 361.488, 488.304, 376.229, 490.694, 389.775, 497.866, 400.532, 508.623, 405.712, 522.965, 405.712, 537.706, 403.321, 554.838, 398.54, 568.384, 391.369, 578.344, 379.417, 583.523, 367.465, 585.914, 351.13, 583.125, 337.584, 576.75, 416.469, 467.188, 428.022, 481.133, 432.405, 492.686, 433.6, 505.037, 433.202, 518.981, 433.202, 534.121, 430.014, 547.667, 424.835, 561.212, 418.859, 573.165, 410.492, 583.523, 397.743, 590.694, 384.198, 595.077, 459.496, 467.188, 453.52, 478.742, 448.341, 490.694, 445.154, 502.248, 443.162, 513.005, 441.568, 526.153, 441.17, 540.097, 443.959, 552.846, 447.943, 564.4, 454.716, 577.547, 466.269, 588.304, 476.229, 593.483, 541.568, 515.396, 531.608, 510.216, 519.257, 509.42, 510.094, 510.216, 501.329, 518.981, 497.743, 529.34, 495.353, 544.878, 496.548, 558.424, 502.524, 567.587, 516.07, 573.165, 527.226, 573.563, 537.584, 571.969, 544.755, 564.798, 533.998, 498.264, 520.453, 491.491, 510.492, 488.702, 500.532, 488.304, 490.971, 493.483, 482.604, 504.639, 478.222, 517.786, 475.433, 538.503, 476.229, 554.439, 479.815, 565.993, 486.986, 575.953, 498.142, 585.117, 511.688, 589.101, 522.843, 587.109, 521.648, 481.93, 508.5, 476.352, 495.751, 474.36, 483.401, 475.953, 470.652, 485.515, 463.48, 502.248, 460.692, 515.396, 459.496, 533.722, 461.09, 549.26, 465.473, 562.408, 471.449, 574.36, 478.62, 582.328, 487.385, 588.304, 498.939, 593.085, 367.066, 475.953, 378.222, 473.961, 389.775, 472.766, 402.524, 479.539, 410.492, 489.101, 416.867, 503.842, 418.062, 515.794, 417.265, 530.137, 418.062, 544.081, 412.883, 558.822, 406.907, 569.579, 400.532, 579.141, 390.971, 586.71, 439.576, 467.188, 439.576, 478.742, 440.373, 492.686, 435.99, 547.268, 435.592, 559.22, 434.795, 567.985, 433.998, 578.344, 433.6, 584.718, 442.365, 572.368, 445.951, 581.133, 426.827, 574.758, 422.046, 585.117 )
uv = PoolVector2Array
polygons = [ [ 3, 2, 4 ], [ 6, 5, 7 ], [ 11, 10, 12 ], [ 23, 22, 24 ], [ 24, 22, 25 ], [ 22, 21, 27 ], [ 25, 22, 27 ], [ 26, 25, 27 ], [ 27, 21, 29 ], [ 28, 27, 29 ], [ 21, 20, 30 ], [ 29, 21, 30 ], [ 30, 20, 31 ], [ 31, 20, 32 ], [ 46, 45, 47 ], [ 56, 55, 58 ], [ 57, 56, 58 ], [ 59, 58, 61 ], [ 60, 59, 61 ], [ 65, 66, 67 ], [ 65, 67, 68 ], [ 65, 68, 70 ], [ 68, 69, 70 ], [ 65, 70, 71 ], [ 65, 71, 72 ], [ 41, 42, 73 ], [ 72, 41, 73 ], [ 65, 72, 73 ], [ 42, 43, 74 ], [ 73, 42, 74 ], [ 43, 44, 74 ], [ 65, 73, 74 ], [ 74, 44, 75 ], [ 65, 74, 75 ], [ 66, 65, 76 ], [ 65, 75, 76 ], [ 7, 8, 78 ], [ 64, 77, 78 ], [ 8, 9, 79 ], [ 78, 8, 79 ], [ 64, 78, 79 ], [ 9, 10, 80 ], [ 79, 9, 80 ], [ 64, 79, 80 ], [ 64, 80, 81 ], [ 64, 81, 82 ], [ 64, 82, 83 ], [ 64, 83, 84 ], [ 64, 84, 85 ], [ 64, 85, 86 ], [ 77, 64, 87 ], [ 64, 86, 87 ], [ 5, 6, 88 ], [ 6, 7, 88 ], [ 7, 78, 88 ], [ 78, 77, 88 ], [ 4, 5, 89 ], [ 5, 88, 89 ], [ 88, 77, 89 ], [ 77, 87, 90 ], [ 89, 77, 90 ], [ 87, 86, 91 ], [ 90, 87, 91 ], [ 91, 86, 92 ], [ 86, 85, 93 ], [ 92, 86, 93 ], [ 93, 85, 94 ], [ 85, 84, 95 ], [ 94, 85, 95 ], [ 95, 84, 96 ], [ 84, 83, 97 ], [ 96, 84, 97 ], [ 83, 82, 98 ], [ 97, 83, 98 ], [ 98, 82, 99 ], [ 12, 13, 100 ], [ 82, 81, 100 ], [ 99, 82, 100 ], [ 10, 11, 101 ], [ 80, 10, 101 ], [ 81, 80, 101 ], [ 11, 12, 101 ], [ 12, 100, 101 ], [ 100, 81, 101 ], [ 3, 4, 102 ], [ 4, 89, 102 ], [ 89, 90, 102 ], [ 2, 3, 103 ], [ 90, 91, 103 ], [ 102, 90, 103 ], [ 3, 102, 103 ], [ 103, 91, 104 ], [ 91, 92, 105 ], [ 104, 91, 105 ], [ 92, 93, 106 ], [ 105, 92, 106 ], [ 93, 94, 107 ], [ 106, 93, 107 ], [ 107, 94, 108 ], [ 94, 95, 109 ], [ 108, 94, 109 ], [ 95, 96, 110 ], [ 109, 95, 110 ], [ 110, 96, 111 ], [ 96, 97, 112 ], [ 111, 96, 112 ], [ 18, 19, 113 ], [ 19, 20, 113 ], [ 20, 112, 113 ], [ 97, 98, 113 ], [ 112, 97, 113 ], [ 16, 17, 114 ], [ 15, 16, 114 ], [ 98, 99, 114 ], [ 17, 18, 114 ], [ 18, 113, 114 ], [ 113, 98, 114 ], [ 14, 15, 115 ], [ 13, 14, 115 ], [ 100, 13, 115 ], [ 99, 100, 115 ], [ 15, 114, 115 ], [ 114, 99, 115 ], [ 60, 61, 116 ], [ 59, 60, 116 ], [ 23, 24, 125 ], [ 21, 22, 126 ], [ 22, 23, 126 ], [ 23, 125, 126 ], [ 20, 21, 127 ], [ 112, 20, 127 ], [ 55, 56, 128 ], [ 56, 57, 128 ], [ 119, 120, 132 ], [ 131, 119, 132 ], [ 120, 121, 133 ], [ 132, 120, 133 ], [ 133, 121, 134 ], [ 29, 30, 138 ], [ 28, 29, 138 ], [ 137, 28, 138 ], [ 30, 31, 139 ], [ 138, 30, 139 ], [ 44, 45, 140 ], [ 75, 44, 140 ], [ 45, 46, 140 ], [ 76, 75, 140 ], [ 76, 140, 141 ], [ 140, 46, 141 ], [ 66, 76, 142 ], [ 76, 141, 142 ], [ 66, 142, 143 ], [ 67, 66, 144 ], [ 66, 143, 144 ], [ 68, 67, 145 ], [ 67, 144, 145 ], [ 69, 68, 146 ], [ 68, 145, 146 ], [ 69, 146, 147 ], [ 70, 69, 148 ], [ 69, 147, 148 ], [ 71, 70, 149 ], [ 70, 148, 149 ], [ 71, 149, 150 ], [ 38, 39, 151 ], [ 72, 71, 151 ], [ 71, 150, 151 ], [ 37, 38, 151 ], [ 150, 37, 151 ], [ 40, 41, 152 ], [ 41, 72, 152 ], [ 39, 40, 152 ], [ 151, 39, 152 ], [ 72, 151, 152 ], [ 47, 48, 153 ], [ 46, 47, 153 ], [ 141, 46, 153 ], [ 142, 141, 153 ], [ 143, 142, 154 ], [ 142, 153, 154 ], [ 153, 48, 154 ], [ 143, 154, 155 ], [ 143, 155, 156 ], [ 144, 143, 157 ], [ 143, 156, 157 ], [ 144, 157, 158 ], [ 145, 144, 159 ], [ 144, 158, 159 ], [ 146, 145, 160 ], [ 145, 159, 160 ], [ 147, 146, 161 ], [ 146, 160, 161 ], [ 147, 161, 162 ], [ 148, 147, 163 ], [ 147, 162, 163 ], [ 149, 148, 164 ], [ 148, 163, 164 ], [ 34, 35, 165 ], [ 149, 164, 165 ], [ 36, 37, 166 ], [ 37, 150, 166 ], [ 35, 36, 166 ], [ 165, 35, 166 ], [ 150, 149, 166 ], [ 149, 165, 166 ], [ 48, 49, 167 ], [ 154, 48, 167 ], [ 49, 50, 167 ], [ 155, 154, 167 ], [ 50, 53, 168 ], [ 156, 155, 168 ], [ 155, 167, 168 ], [ 167, 50, 168 ], [ 52, 54, 169 ], [ 157, 156, 169 ], [ 53, 52, 169 ], [ 168, 53, 169 ], [ 156, 168, 169 ], [ 55, 128, 170 ], [ 54, 55, 170 ], [ 169, 54, 170 ], [ 157, 169, 170 ], [ 129, 130, 171 ], [ 128, 129, 171 ], [ 170, 128, 171 ], [ 158, 157, 171 ], [ 157, 170, 171 ], [ 159, 158, 172 ], [ 130, 131, 172 ], [ 171, 130, 172 ], [ 158, 171, 172 ], [ 132, 133, 173 ], [ 131, 132, 173 ], [ 172, 131, 173 ], [ 159, 172, 173 ], [ 133, 134, 174 ], [ 173, 133, 174 ], [ 160, 159, 174 ], [ 159, 173, 174 ], [ 135, 136, 175 ], [ 134, 135, 175 ], [ 174, 134, 175 ], [ 161, 160, 175 ], [ 160, 174, 175 ], [ 136, 137, 176 ], [ 175, 136, 176 ], [ 162, 161, 176 ], [ 161, 175, 176 ], [ 163, 162, 177 ], [ 137, 138, 177 ], [ 176, 137, 177 ], [ 162, 176, 177 ], [ 138, 139, 178 ], [ 177, 138, 178 ], [ 163, 177, 178 ], [ 31, 32, 179 ], [ 139, 31, 179 ], [ 178, 139, 179 ], [ 164, 163, 179 ], [ 163, 178, 179 ], [ 32, 33, 180 ], [ 33, 34, 180 ], [ 34, 165, 180 ], [ 165, 164, 180 ], [ 164, 179, 180 ], [ 179, 32, 180 ], [ 1, 2, 181 ], [ 2, 103, 181 ], [ 0, 1, 181 ], [ 103, 104, 181 ], [ 62, 63, 182 ], [ 63, 0, 182 ], [ 0, 181, 182 ], [ 181, 104, 182 ], [ 61, 62, 183 ], [ 62, 182, 183 ], [ 104, 105, 183 ], [ 182, 104, 183 ], [ 183, 105, 184 ], [ 116, 61, 184 ], [ 61, 183, 184 ], [ 105, 106, 185 ], [ 184, 105, 185 ], [ 117, 116, 185 ], [ 116, 184, 185 ], [ 118, 117, 185 ], [ 185, 106, 186 ], [ 119, 118, 186 ], [ 118, 185, 186 ], [ 106, 107, 187 ], [ 186, 106, 187 ], [ 120, 119, 187 ], [ 119, 186, 187 ], [ 107, 108, 188 ], [ 187, 107, 188 ], [ 121, 120, 188 ], [ 120, 187, 188 ], [ 108, 109, 189 ], [ 123, 122, 189 ], [ 188, 108, 189 ], [ 122, 121, 189 ], [ 121, 188, 189 ], [ 124, 123, 190 ], [ 123, 189, 190 ], [ 189, 109, 190 ], [ 125, 124, 191 ], [ 109, 110, 191 ], [ 190, 109, 191 ], [ 124, 190, 191 ], [ 126, 125, 192 ], [ 110, 111, 192 ], [ 191, 110, 192 ], [ 125, 191, 192 ], [ 111, 112, 193 ], [ 112, 127, 193 ], [ 21, 126, 193 ], [ 127, 21, 193 ], [ 126, 192, 193 ], [ 192, 111, 193 ], [ 58, 59, 194 ], [ 59, 116, 194 ], [ 116, 117, 194 ], [ 57, 58, 194 ], [ 128, 57, 194 ], [ 129, 128, 194 ], [ 117, 118, 195 ], [ 130, 129, 195 ], [ 129, 194, 195 ], [ 194, 117, 195 ], [ 118, 119, 196 ], [ 119, 131, 196 ], [ 131, 130, 196 ], [ 130, 195, 196 ], [ 195, 118, 196 ], [ 121, 122, 197 ], [ 134, 121, 197 ], [ 135, 134, 197 ], [ 136, 135, 198 ], [ 122, 123, 198 ], [ 197, 122, 198 ], [ 135, 197, 198 ], [ 198, 123, 199 ], [ 136, 198, 199 ], [ 25, 26, 201 ], [ 26, 27, 201 ], [ 137, 136, 202 ], [ 136, 199, 202 ], [ 199, 200, 202 ], [ 27, 28, 203 ], [ 28, 137, 203 ], [ 201, 27, 203 ], [ 200, 201, 203 ], [ 202, 200, 203 ], [ 137, 202, 203 ], [ 123, 124, 204 ], [ 199, 123, 204 ], [ 200, 199, 204 ], [ 201, 200, 204 ], [ 124, 125, 205 ], [ 125, 24, 205 ], [ 24, 25, 205 ], [ 204, 124, 205 ], [ 25, 201, 205 ], [ 201, 204, 205 ] ]
internal_vertex_count = 142
script = ExtResource( 59 )
auto_poly = true
copy_uvs = null

[node name="Position2D" type="Position2D" parent="HumanF1/Spine/Tits/Tits_mesh"]
position = Vector2( 436, 590 )
script = ExtResource( 60 )
__meta__ = {
"_gizmo_extents_": 100.0
}
anchor = Vector2( 436, 590 )
lock_anchor_position = true

[node name="Position2D2" type="Position2D" parent="HumanF1/Spine/Tits/Tits_mesh"]
position = Vector2( 365, 539 )
script = ExtResource( 60 )
__meta__ = {
"_gizmo_extents_": 110.0
}
anchor = Vector2( 365, 539 )
lock_anchor_position = true

[node name="Position2D3" type="Position2D" parent="HumanF1/Spine/Tits/Tits_mesh"]
position = Vector2( 519, 539 )
script = ExtResource( 60 )
__meta__ = {
"_gizmo_extents_": 110.0
}
anchor = Vector2( 519, 539 )
lock_anchor_position = true

[node name="Position2D4" type="Position2D" parent="HumanF1/Spine/Tits/Tits_mesh"]
visible = false
script = ExtResource( 60 )

[node name="Position2D5" type="Position2D" parent="HumanF1/Spine/Tits/Tits_mesh"]
visible = false
script = ExtResource( 60 )

[node name="Position2D6" type="Position2D" parent="HumanF1/Spine/Tits/Tits_mesh"]
visible = false
script = ExtResource( 60 )

[node name="Nipple_mesh" type="Polygon2D" parent="HumanF1/Spine/Tits"]
material = SubResource( 10 )
position = Vector2( -480.999, 428.002 )
rotation = -1.5708
offset = Vector2( 0, -1 )
texture = ExtResource( 31 )
polygon = PoolVector2Array( 367.066, 465.196, 359.895, 471.173, 354.317, 475.953, 348.739, 485.515, 340.771, 495.077, 334.795, 503.443, 330.811, 511.81, 326.827, 518.981, 324.038, 528.145, 322.843, 537.308, 322.046, 546.87, 323.64, 555.635, 324.835, 563.603, 327.624, 570.774, 330.811, 577.547, 336.389, 583.922, 342.763, 589.898, 348.739, 594.28, 358.301, 598.264, 366.668, 600.256, 378.62, 601.053, 388.58, 599.459, 399.337, 597.069, 408.102, 594.28, 418.062, 593.085, 425.233, 593.085, 433.202, 593.085, 444.755, 595.077, 454.716, 595.874, 463.48, 597.467, 472.245, 599.061, 481.409, 600.256, 492.963, 601.451, 500.532, 601.451, 509.297, 600.256, 520.054, 598.663, 529.616, 593.483, 536.787, 588.304, 543.959, 579.938, 549.138, 571.571, 553.52, 564.001, 555.911, 554.041, 556.309, 544.081, 556.309, 533.324, 553.122, 521.372, 548.739, 510.615, 543.56, 501.053, 539.576, 492.288, 533.6, 485.117, 525.632, 476.352, 516.469, 469.181, 506.508, 463.603, 500.134, 461.611, 506.508, 463.603, 491.369, 460.017, 477.026, 459.22, 461.887, 458.424, 449.536, 458.025, 439.576, 457.228, 426.429, 457.627, 416.07, 458.025, 400.532, 457.228, 386.19, 457.627, 374.237, 461.212, 352.724, 538.503, 529.218, 539.3, 518.859, 524.161, 512.883, 528.941, 510.094, 538.902, 511.289, 549.26, 518.062, 552.846, 528.022, 555.635, 535.99, 554.041, 541.967, 545.276, 543.162, 535.714, 539.178, 526.153, 530.413, 522.567, 346.349, 520.575, 337.584, 525.356, 334.397, 536.113, 335.194, 545.675, 341.17, 552.846, 350.731, 556.83, 361.09, 555.236, 368.261, 550.455, 369.855, 539.698, 367.465, 528.543, 357.903, 521.77, 336.389, 514.599, 343.56, 509.021, 353.919, 505.435, 369.457, 506.631, 380.612, 512.607, 389.377, 523.762, 393.361, 539.3, 390.971, 551.651, 384.994, 564.4, 373.042, 569.977, 361.09, 573.165, 346.747, 570.774, 333.998, 564.001, 329.616, 554.838, 348.341, 495.077, 361.488, 488.304, 376.229, 490.694, 389.775, 497.866, 400.532, 508.623, 405.712, 522.965, 405.712, 537.706, 403.321, 554.838, 398.54, 568.384, 391.369, 578.344, 379.417, 583.523, 367.465, 585.914, 351.13, 583.125, 337.584, 576.75, 416.469, 467.188, 428.022, 481.133, 432.405, 492.686, 433.6, 505.037, 433.202, 518.981, 433.202, 534.121, 430.014, 547.667, 424.835, 561.212, 418.859, 573.165, 410.492, 583.523, 397.743, 590.694, 384.198, 595.077, 459.496, 467.188, 453.52, 478.742, 448.341, 490.694, 445.154, 502.248, 443.162, 513.005, 441.568, 526.153, 441.17, 540.097, 443.959, 552.846, 447.943, 564.4, 454.716, 577.547, 466.269, 588.304, 476.229, 593.483, 541.568, 515.396, 531.608, 510.216, 519.257, 509.42, 510.094, 510.216, 501.329, 518.981, 497.743, 529.34, 495.353, 544.878, 496.548, 558.424, 502.524, 567.587, 516.07, 573.165, 527.226, 573.563, 537.584, 571.969, 544.755, 564.798, 533.998, 498.264, 520.453, 491.491, 510.492, 488.702, 500.532, 488.304, 490.971, 493.483, 482.604, 504.639, 478.222, 517.786, 475.433, 538.503, 476.229, 554.439, 479.815, 565.993, 486.986, 575.953, 498.142, 585.117, 511.688, 589.101, 522.843, 587.109, 521.648, 481.93, 508.5, 476.352, 495.751, 474.36, 483.401, 475.953, 470.652, 485.515, 463.48, 502.248, 460.692, 515.396, 459.496, 533.722, 461.09, 549.26, 465.473, 562.408, 471.449, 574.36, 478.62, 582.328, 487.385, 588.304, 498.939, 593.085, 367.066, 475.953, 378.222, 473.961, 389.775, 472.766, 402.524, 479.539, 410.492, 489.101, 416.867, 503.842, 418.062, 515.794, 417.265, 530.137, 418.062, 544.081, 412.883, 558.822, 406.907, 569.579, 400.532, 579.141, 390.971, 586.71, 439.576, 467.188, 439.576, 478.742, 440.373, 492.686, 435.99, 547.268, 435.592, 559.22, 434.795, 567.985, 433.998, 578.344, 433.6, 584.718, 442.365, 572.368, 445.951, 581.133, 426.827, 574.758, 422.046, 585.117 )
uv = PoolVector2Array
polygons = [ [ 3, 2, 4 ], [ 6, 5, 7 ], [ 11, 10, 12 ], [ 23, 22, 24 ], [ 24, 22, 25 ], [ 22, 21, 27 ], [ 25, 22, 27 ], [ 26, 25, 27 ], [ 27, 21, 29 ], [ 28, 27, 29 ], [ 21, 20, 30 ], [ 29, 21, 30 ], [ 30, 20, 31 ], [ 31, 20, 32 ], [ 46, 45, 47 ], [ 56, 55, 58 ], [ 57, 56, 58 ], [ 59, 58, 61 ], [ 60, 59, 61 ], [ 65, 66, 67 ], [ 65, 67, 68 ], [ 65, 68, 70 ], [ 68, 69, 70 ], [ 65, 70, 71 ], [ 65, 71, 72 ], [ 41, 42, 73 ], [ 72, 41, 73 ], [ 65, 72, 73 ], [ 42, 43, 74 ], [ 73, 42, 74 ], [ 43, 44, 74 ], [ 65, 73, 74 ], [ 74, 44, 75 ], [ 65, 74, 75 ], [ 66, 65, 76 ], [ 65, 75, 76 ], [ 7, 8, 78 ], [ 64, 77, 78 ], [ 8, 9, 79 ], [ 78, 8, 79 ], [ 64, 78, 79 ], [ 9, 10, 80 ], [ 79, 9, 80 ], [ 64, 79, 80 ], [ 64, 80, 81 ], [ 64, 81, 82 ], [ 64, 82, 83 ], [ 64, 83, 84 ], [ 64, 84, 85 ], [ 64, 85, 86 ], [ 77, 64, 87 ], [ 64, 86, 87 ], [ 5, 6, 88 ], [ 6, 7, 88 ], [ 7, 78, 88 ], [ 78, 77, 88 ], [ 4, 5, 89 ], [ 5, 88, 89 ], [ 88, 77, 89 ], [ 77, 87, 90 ], [ 89, 77, 90 ], [ 87, 86, 91 ], [ 90, 87, 91 ], [ 91, 86, 92 ], [ 86, 85, 93 ], [ 92, 86, 93 ], [ 93, 85, 94 ], [ 85, 84, 95 ], [ 94, 85, 95 ], [ 95, 84, 96 ], [ 84, 83, 97 ], [ 96, 84, 97 ], [ 83, 82, 98 ], [ 97, 83, 98 ], [ 98, 82, 99 ], [ 12, 13, 100 ], [ 82, 81, 100 ], [ 99, 82, 100 ], [ 10, 11, 101 ], [ 80, 10, 101 ], [ 81, 80, 101 ], [ 11, 12, 101 ], [ 12, 100, 101 ], [ 100, 81, 101 ], [ 3, 4, 102 ], [ 4, 89, 102 ], [ 89, 90, 102 ], [ 2, 3, 103 ], [ 90, 91, 103 ], [ 102, 90, 103 ], [ 3, 102, 103 ], [ 103, 91, 104 ], [ 91, 92, 105 ], [ 104, 91, 105 ], [ 92, 93, 106 ], [ 105, 92, 106 ], [ 93, 94, 107 ], [ 106, 93, 107 ], [ 107, 94, 108 ], [ 94, 95, 109 ], [ 108, 94, 109 ], [ 95, 96, 110 ], [ 109, 95, 110 ], [ 110, 96, 111 ], [ 96, 97, 112 ], [ 111, 96, 112 ], [ 18, 19, 113 ], [ 19, 20, 113 ], [ 20, 112, 113 ], [ 97, 98, 113 ], [ 112, 97, 113 ], [ 16, 17, 114 ], [ 15, 16, 114 ], [ 98, 99, 114 ], [ 17, 18, 114 ], [ 18, 113, 114 ], [ 113, 98, 114 ], [ 14, 15, 115 ], [ 13, 14, 115 ], [ 100, 13, 115 ], [ 99, 100, 115 ], [ 15, 114, 115 ], [ 114, 99, 115 ], [ 60, 61, 116 ], [ 59, 60, 116 ], [ 23, 24, 125 ], [ 21, 22, 126 ], [ 22, 23, 126 ], [ 23, 125, 126 ], [ 20, 21, 127 ], [ 112, 20, 127 ], [ 55, 56, 128 ], [ 56, 57, 128 ], [ 119, 120, 132 ], [ 131, 119, 132 ], [ 120, 121, 133 ], [ 132, 120, 133 ], [ 133, 121, 134 ], [ 29, 30, 138 ], [ 28, 29, 138 ], [ 137, 28, 138 ], [ 30, 31, 139 ], [ 138, 30, 139 ], [ 44, 45, 140 ], [ 75, 44, 140 ], [ 45, 46, 140 ], [ 76, 75, 140 ], [ 76, 140, 141 ], [ 140, 46, 141 ], [ 66, 76, 142 ], [ 76, 141, 142 ], [ 66, 142, 143 ], [ 67, 66, 144 ], [ 66, 143, 144 ], [ 68, 67, 145 ], [ 67, 144, 145 ], [ 69, 68, 146 ], [ 68, 145, 146 ], [ 69, 146, 147 ], [ 70, 69, 148 ], [ 69, 147, 148 ], [ 71, 70, 149 ], [ 70, 148, 149 ], [ 71, 149, 150 ], [ 38, 39, 151 ], [ 72, 71, 151 ], [ 71, 150, 151 ], [ 37, 38, 151 ], [ 150, 37, 151 ], [ 40, 41, 152 ], [ 41, 72, 152 ], [ 39, 40, 152 ], [ 151, 39, 152 ], [ 72, 151, 152 ], [ 47, 48, 153 ], [ 46, 47, 153 ], [ 141, 46, 153 ], [ 142, 141, 153 ], [ 143, 142, 154 ], [ 142, 153, 154 ], [ 153, 48, 154 ], [ 143, 154, 155 ], [ 143, 155, 156 ], [ 144, 143, 157 ], [ 143, 156, 157 ], [ 144, 157, 158 ], [ 145, 144, 159 ], [ 144, 158, 159 ], [ 146, 145, 160 ], [ 145, 159, 160 ], [ 147, 146, 161 ], [ 146, 160, 161 ], [ 147, 161, 162 ], [ 148, 147, 163 ], [ 147, 162, 163 ], [ 149, 148, 164 ], [ 148, 163, 164 ], [ 34, 35, 165 ], [ 149, 164, 165 ], [ 36, 37, 166 ], [ 37, 150, 166 ], [ 35, 36, 166 ], [ 165, 35, 166 ], [ 150, 149, 166 ], [ 149, 165, 166 ], [ 48, 49, 167 ], [ 154, 48, 167 ], [ 49, 50, 167 ], [ 155, 154, 167 ], [ 50, 53, 168 ], [ 156, 155, 168 ], [ 155, 167, 168 ], [ 167, 50, 168 ], [ 52, 54, 169 ], [ 157, 156, 169 ], [ 53, 52, 169 ], [ 168, 53, 169 ], [ 156, 168, 169 ], [ 55, 128, 170 ], [ 54, 55, 170 ], [ 169, 54, 170 ], [ 157, 169, 170 ], [ 129, 130, 171 ], [ 128, 129, 171 ], [ 170, 128, 171 ], [ 158, 157, 171 ], [ 157, 170, 171 ], [ 159, 158, 172 ], [ 130, 131, 172 ], [ 171, 130, 172 ], [ 158, 171, 172 ], [ 132, 133, 173 ], [ 131, 132, 173 ], [ 172, 131, 173 ], [ 159, 172, 173 ], [ 133, 134, 174 ], [ 173, 133, 174 ], [ 160, 159, 174 ], [ 159, 173, 174 ], [ 135, 136, 175 ], [ 134, 135, 175 ], [ 174, 134, 175 ], [ 161, 160, 175 ], [ 160, 174, 175 ], [ 136, 137, 176 ], [ 175, 136, 176 ], [ 162, 161, 176 ], [ 161, 175, 176 ], [ 163, 162, 177 ], [ 137, 138, 177 ], [ 176, 137, 177 ], [ 162, 176, 177 ], [ 138, 139, 178 ], [ 177, 138, 178 ], [ 163, 177, 178 ], [ 31, 32, 179 ], [ 139, 31, 179 ], [ 178, 139, 179 ], [ 164, 163, 179 ], [ 163, 178, 179 ], [ 32, 33, 180 ], [ 33, 34, 180 ], [ 34, 165, 180 ], [ 165, 164, 180 ], [ 164, 179, 180 ], [ 179, 32, 180 ], [ 1, 2, 181 ], [ 2, 103, 181 ], [ 0, 1, 181 ], [ 103, 104, 181 ], [ 62, 63, 182 ], [ 63, 0, 182 ], [ 0, 181, 182 ], [ 181, 104, 182 ], [ 61, 62, 183 ], [ 62, 182, 183 ], [ 104, 105, 183 ], [ 182, 104, 183 ], [ 183, 105, 184 ], [ 116, 61, 184 ], [ 61, 183, 184 ], [ 105, 106, 185 ], [ 184, 105, 185 ], [ 117, 116, 185 ], [ 116, 184, 185 ], [ 118, 117, 185 ], [ 185, 106, 186 ], [ 119, 118, 186 ], [ 118, 185, 186 ], [ 106, 107, 187 ], [ 186, 106, 187 ], [ 120, 119, 187 ], [ 119, 186, 187 ], [ 107, 108, 188 ], [ 187, 107, 188 ], [ 121, 120, 188 ], [ 120, 187, 188 ], [ 108, 109, 189 ], [ 123, 122, 189 ], [ 188, 108, 189 ], [ 122, 121, 189 ], [ 121, 188, 189 ], [ 124, 123, 190 ], [ 123, 189, 190 ], [ 189, 109, 190 ], [ 125, 124, 191 ], [ 109, 110, 191 ], [ 190, 109, 191 ], [ 124, 190, 191 ], [ 126, 125, 192 ], [ 110, 111, 192 ], [ 191, 110, 192 ], [ 125, 191, 192 ], [ 111, 112, 193 ], [ 112, 127, 193 ], [ 21, 126, 193 ], [ 127, 21, 193 ], [ 126, 192, 193 ], [ 192, 111, 193 ], [ 58, 59, 194 ], [ 59, 116, 194 ], [ 116, 117, 194 ], [ 57, 58, 194 ], [ 128, 57, 194 ], [ 129, 128, 194 ], [ 117, 118, 195 ], [ 130, 129, 195 ], [ 129, 194, 195 ], [ 194, 117, 195 ], [ 118, 119, 196 ], [ 119, 131, 196 ], [ 131, 130, 196 ], [ 130, 195, 196 ], [ 195, 118, 196 ], [ 121, 122, 197 ], [ 134, 121, 197 ], [ 135, 134, 197 ], [ 136, 135, 198 ], [ 122, 123, 198 ], [ 197, 122, 198 ], [ 135, 197, 198 ], [ 198, 123, 199 ], [ 136, 198, 199 ], [ 25, 26, 201 ], [ 26, 27, 201 ], [ 137, 136, 202 ], [ 136, 199, 202 ], [ 199, 200, 202 ], [ 27, 28, 203 ], [ 28, 137, 203 ], [ 201, 27, 203 ], [ 200, 201, 203 ], [ 202, 200, 203 ], [ 137, 202, 203 ], [ 123, 124, 204 ], [ 199, 123, 204 ], [ 200, 199, 204 ], [ 201, 200, 204 ], [ 124, 125, 205 ], [ 125, 24, 205 ], [ 24, 25, 205 ], [ 204, 124, 205 ], [ 25, 201, 205 ], [ 201, 204, 205 ] ]
internal_vertex_count = 142
script = ExtResource( 59 )
auto_poly = true
copy_uvs = null

[node name="Position2D" type="Position2D" parent="HumanF1/Spine/Tits/Nipple_mesh"]
visible = false
position = Vector2( 436, 590 )
script = ExtResource( 60 )
__meta__ = {
"_gizmo_extents_": 60.0
}
anchor = Vector2( 436, 590 )
lock_anchor_position = true

[node name="Position2D2" type="Position2D" parent="HumanF1/Spine/Tits/Nipple_mesh"]
visible = false
position = Vector2( 365, 539 )
script = ExtResource( 60 )
__meta__ = {
"_gizmo_extents_": 110.0
}
anchor = Vector2( 365, 539 )
lock_anchor_position = true

[node name="Position2D3" type="Position2D" parent="HumanF1/Spine/Tits/Nipple_mesh"]
visible = false
position = Vector2( 519, 539 )
script = ExtResource( 60 )
__meta__ = {
"_gizmo_extents_": 110.0
}
anchor = Vector2( 519, 539 )
lock_anchor_position = true

[node name="Position2D4" type="Position2D" parent="HumanF1/Spine/Tits/Nipple_mesh"]
visible = false
script = ExtResource( 60 )

[node name="Position2D5" type="Position2D" parent="HumanF1/Spine/Tits/Nipple_mesh"]
visible = false
script = ExtResource( 60 )

[node name="Position2D6" type="Position2D" parent="HumanF1/Spine/Tits/Nipple_mesh"]
visible = false
script = ExtResource( 60 )

[node name="Tits_armor_mesh" type="Polygon2D" parent="HumanF1/Spine/Tits"]
visible = false
material = SubResource( 11 )
position = Vector2( -481.999, 427.002 )
rotation = -1.5708
offset = Vector2( 0, -1 )
texture = ExtResource( 49 )
polygon = PoolVector2Array( 367.066, 465.196, 359.895, 471.173, 354.317, 475.953, 348.739, 485.515, 340.771, 495.077, 334.795, 503.443, 330.811, 511.81, 326.827, 518.981, 324.038, 528.145, 322.843, 537.308, 322.046, 546.87, 323.64, 555.635, 324.835, 563.603, 327.624, 570.774, 330.811, 577.547, 336.389, 583.922, 342.763, 589.898, 348.739, 594.28, 358.301, 598.264, 366.668, 600.256, 378.62, 601.053, 388.58, 599.459, 399.337, 597.069, 408.102, 594.28, 418.062, 593.085, 425.233, 593.085, 433.202, 593.085, 444.755, 595.077, 454.716, 595.874, 463.48, 597.467, 472.245, 599.061, 481.409, 600.256, 492.963, 601.451, 500.532, 601.451, 509.297, 600.256, 520.054, 598.663, 529.616, 593.483, 536.787, 588.304, 543.959, 579.938, 549.138, 571.571, 553.52, 564.001, 555.911, 554.041, 556.309, 544.081, 556.309, 533.324, 553.122, 521.372, 548.739, 510.615, 543.56, 501.053, 539.576, 492.288, 533.6, 485.117, 525.632, 476.352, 516.469, 469.181, 506.508, 463.603, 500.134, 461.611, 506.508, 463.603, 491.369, 460.017, 477.026, 459.22, 461.887, 458.424, 449.536, 458.025, 439.576, 457.228, 426.429, 457.627, 416.07, 458.025, 400.532, 457.228, 386.19, 457.627, 374.237, 461.212, 352.724, 538.503, 529.218, 539.3, 518.859, 524.161, 512.883, 528.941, 510.094, 538.902, 511.289, 549.26, 518.062, 552.846, 528.022, 555.635, 535.99, 554.041, 541.967, 545.276, 543.162, 535.714, 539.178, 526.153, 530.413, 522.567, 346.349, 520.575, 337.584, 525.356, 334.397, 536.113, 335.194, 545.675, 341.17, 552.846, 350.731, 556.83, 361.09, 555.236, 368.261, 550.455, 369.855, 539.698, 367.465, 528.543, 357.903, 521.77, 336.389, 514.599, 343.56, 509.021, 353.919, 505.435, 369.457, 506.631, 380.612, 512.607, 389.377, 523.762, 393.361, 539.3, 390.971, 551.651, 384.994, 564.4, 373.042, 569.977, 361.09, 573.165, 346.747, 570.774, 333.998, 564.001, 329.616, 554.838, 348.341, 495.077, 361.488, 488.304, 376.229, 490.694, 389.775, 497.866, 400.532, 508.623, 405.712, 522.965, 405.712, 537.706, 403.321, 554.838, 398.54, 568.384, 391.369, 578.344, 379.417, 583.523, 367.465, 585.914, 351.13, 583.125, 337.584, 576.75, 416.469, 467.188, 428.022, 481.133, 432.405, 492.686, 433.6, 505.037, 433.202, 518.981, 433.202, 534.121, 430.014, 547.667, 424.835, 561.212, 418.859, 573.165, 410.492, 583.523, 397.743, 590.694, 384.198, 595.077, 459.496, 467.188, 453.52, 478.742, 448.341, 490.694, 445.154, 502.248, 443.162, 513.005, 441.568, 526.153, 441.17, 540.097, 443.959, 552.846, 447.943, 564.4, 454.716, 577.547, 466.269, 588.304, 476.229, 593.483, 541.568, 515.396, 531.608, 510.216, 519.257, 509.42, 510.094, 510.216, 501.329, 518.981, 497.743, 529.34, 495.353, 544.878, 496.548, 558.424, 502.524, 567.587, 516.07, 573.165, 527.226, 573.563, 537.584, 571.969, 544.755, 564.798, 533.998, 498.264, 520.453, 491.491, 510.492, 488.702, 500.532, 488.304, 490.971, 493.483, 482.604, 504.639, 478.222, 517.786, 475.433, 538.503, 476.229, 554.439, 479.815, 565.993, 486.986, 575.953, 498.142, 585.117, 511.688, 589.101, 522.843, 587.109, 521.648, 481.93, 508.5, 476.352, 495.751, 474.36, 483.401, 475.953, 470.652, 485.515, 463.48, 502.248, 460.692, 515.396, 459.496, 533.722, 461.09, 549.26, 465.473, 562.408, 471.449, 574.36, 478.62, 582.328, 487.385, 588.304, 498.939, 593.085, 367.066, 475.953, 378.222, 473.961, 389.775, 472.766, 402.524, 479.539, 410.492, 489.101, 416.867, 503.842, 418.062, 515.794, 417.265, 530.137, 418.062, 544.081, 412.883, 558.822, 406.907, 569.579, 400.532, 579.141, 390.971, 586.71, 439.576, 467.188, 439.576, 478.742, 440.373, 492.686, 435.99, 547.268, 435.592, 559.22, 434.795, 567.985, 433.998, 578.344, 433.6, 584.718, 442.365, 572.368, 445.951, 581.133, 426.827, 574.758, 422.046, 585.117 )
uv = PoolVector2Array
polygons = [ [ 3, 2, 4 ], [ 6, 5, 7 ], [ 11, 10, 12 ], [ 23, 22, 24 ], [ 24, 22, 25 ], [ 22, 21, 27 ], [ 25, 22, 27 ], [ 26, 25, 27 ], [ 27, 21, 29 ], [ 28, 27, 29 ], [ 21, 20, 30 ], [ 29, 21, 30 ], [ 30, 20, 31 ], [ 31, 20, 32 ], [ 46, 45, 47 ], [ 56, 55, 58 ], [ 57, 56, 58 ], [ 59, 58, 61 ], [ 60, 59, 61 ], [ 65, 66, 67 ], [ 65, 67, 68 ], [ 65, 68, 70 ], [ 68, 69, 70 ], [ 65, 70, 71 ], [ 65, 71, 72 ], [ 41, 42, 73 ], [ 72, 41, 73 ], [ 65, 72, 73 ], [ 42, 43, 74 ], [ 73, 42, 74 ], [ 43, 44, 74 ], [ 65, 73, 74 ], [ 74, 44, 75 ], [ 65, 74, 75 ], [ 66, 65, 76 ], [ 65, 75, 76 ], [ 7, 8, 78 ], [ 64, 77, 78 ], [ 8, 9, 79 ], [ 78, 8, 79 ], [ 64, 78, 79 ], [ 9, 10, 80 ], [ 79, 9, 80 ], [ 64, 79, 80 ], [ 64, 80, 81 ], [ 64, 81, 82 ], [ 64, 82, 83 ], [ 64, 83, 84 ], [ 64, 84, 85 ], [ 64, 85, 86 ], [ 77, 64, 87 ], [ 64, 86, 87 ], [ 5, 6, 88 ], [ 6, 7, 88 ], [ 7, 78, 88 ], [ 78, 77, 88 ], [ 4, 5, 89 ], [ 5, 88, 89 ], [ 88, 77, 89 ], [ 77, 87, 90 ], [ 89, 77, 90 ], [ 87, 86, 91 ], [ 90, 87, 91 ], [ 91, 86, 92 ], [ 86, 85, 93 ], [ 92, 86, 93 ], [ 93, 85, 94 ], [ 85, 84, 95 ], [ 94, 85, 95 ], [ 95, 84, 96 ], [ 84, 83, 97 ], [ 96, 84, 97 ], [ 83, 82, 98 ], [ 97, 83, 98 ], [ 98, 82, 99 ], [ 12, 13, 100 ], [ 82, 81, 100 ], [ 99, 82, 100 ], [ 10, 11, 101 ], [ 80, 10, 101 ], [ 81, 80, 101 ], [ 11, 12, 101 ], [ 12, 100, 101 ], [ 100, 81, 101 ], [ 3, 4, 102 ], [ 4, 89, 102 ], [ 89, 90, 102 ], [ 2, 3, 103 ], [ 90, 91, 103 ], [ 102, 90, 103 ], [ 3, 102, 103 ], [ 103, 91, 104 ], [ 91, 92, 105 ], [ 104, 91, 105 ], [ 92, 93, 106 ], [ 105, 92, 106 ], [ 93, 94, 107 ], [ 106, 93, 107 ], [ 107, 94, 108 ], [ 94, 95, 109 ], [ 108, 94, 109 ], [ 95, 96, 110 ], [ 109, 95, 110 ], [ 110, 96, 111 ], [ 96, 97, 112 ], [ 111, 96, 112 ], [ 18, 19, 113 ], [ 19, 20, 113 ], [ 20, 112, 113 ], [ 97, 98, 113 ], [ 112, 97, 113 ], [ 16, 17, 114 ], [ 15, 16, 114 ], [ 98, 99, 114 ], [ 17, 18, 114 ], [ 18, 113, 114 ], [ 113, 98, 114 ], [ 14, 15, 115 ], [ 13, 14, 115 ], [ 100, 13, 115 ], [ 99, 100, 115 ], [ 15, 114, 115 ], [ 114, 99, 115 ], [ 60, 61, 116 ], [ 59, 60, 116 ], [ 23, 24, 125 ], [ 21, 22, 126 ], [ 22, 23, 126 ], [ 23, 125, 126 ], [ 20, 21, 127 ], [ 112, 20, 127 ], [ 55, 56, 128 ], [ 56, 57, 128 ], [ 119, 120, 132 ], [ 131, 119, 132 ], [ 120, 121, 133 ], [ 132, 120, 133 ], [ 133, 121, 134 ], [ 29, 30, 138 ], [ 28, 29, 138 ], [ 137, 28, 138 ], [ 30, 31, 139 ], [ 138, 30, 139 ], [ 44, 45, 140 ], [ 75, 44, 140 ], [ 45, 46, 140 ], [ 76, 75, 140 ], [ 76, 140, 141 ], [ 140, 46, 141 ], [ 66, 76, 142 ], [ 76, 141, 142 ], [ 66, 142, 143 ], [ 67, 66, 144 ], [ 66, 143, 144 ], [ 68, 67, 145 ], [ 67, 144, 145 ], [ 69, 68, 146 ], [ 68, 145, 146 ], [ 69, 146, 147 ], [ 70, 69, 148 ], [ 69, 147, 148 ], [ 71, 70, 149 ], [ 70, 148, 149 ], [ 71, 149, 150 ], [ 38, 39, 151 ], [ 72, 71, 151 ], [ 71, 150, 151 ], [ 37, 38, 151 ], [ 150, 37, 151 ], [ 40, 41, 152 ], [ 41, 72, 152 ], [ 39, 40, 152 ], [ 151, 39, 152 ], [ 72, 151, 152 ], [ 47, 48, 153 ], [ 46, 47, 153 ], [ 141, 46, 153 ], [ 142, 141, 153 ], [ 143, 142, 154 ], [ 142, 153, 154 ], [ 153, 48, 154 ], [ 143, 154, 155 ], [ 143, 155, 156 ], [ 144, 143, 157 ], [ 143, 156, 157 ], [ 144, 157, 158 ], [ 145, 144, 159 ], [ 144, 158, 159 ], [ 146, 145, 160 ], [ 145, 159, 160 ], [ 147, 146, 161 ], [ 146, 160, 161 ], [ 147, 161, 162 ], [ 148, 147, 163 ], [ 147, 162, 163 ], [ 149, 148, 164 ], [ 148, 163, 164 ], [ 34, 35, 165 ], [ 149, 164, 165 ], [ 36, 37, 166 ], [ 37, 150, 166 ], [ 35, 36, 166 ], [ 165, 35, 166 ], [ 150, 149, 166 ], [ 149, 165, 166 ], [ 48, 49, 167 ], [ 154, 48, 167 ], [ 49, 50, 167 ], [ 155, 154, 167 ], [ 50, 53, 168 ], [ 156, 155, 168 ], [ 155, 167, 168 ], [ 167, 50, 168 ], [ 52, 54, 169 ], [ 157, 156, 169 ], [ 53, 52, 169 ], [ 168, 53, 169 ], [ 156, 168, 169 ], [ 55, 128, 170 ], [ 54, 55, 170 ], [ 169, 54, 170 ], [ 157, 169, 170 ], [ 129, 130, 171 ], [ 128, 129, 171 ], [ 170, 128, 171 ], [ 158, 157, 171 ], [ 157, 170, 171 ], [ 159, 158, 172 ], [ 130, 131, 172 ], [ 171, 130, 172 ], [ 158, 171, 172 ], [ 132, 133, 173 ], [ 131, 132, 173 ], [ 172, 131, 173 ], [ 159, 172, 173 ], [ 133, 134, 174 ], [ 173, 133, 174 ], [ 160, 159, 174 ], [ 159, 173, 174 ], [ 135, 136, 175 ], [ 134, 135, 175 ], [ 174, 134, 175 ], [ 161, 160, 175 ], [ 160, 174, 175 ], [ 136, 137, 176 ], [ 175, 136, 176 ], [ 162, 161, 176 ], [ 161, 175, 176 ], [ 163, 162, 177 ], [ 137, 138, 177 ], [ 176, 137, 177 ], [ 162, 176, 177 ], [ 138, 139, 178 ], [ 177, 138, 178 ], [ 163, 177, 178 ], [ 31, 32, 179 ], [ 139, 31, 179 ], [ 178, 139, 179 ], [ 164, 163, 179 ], [ 163, 178, 179 ], [ 32, 33, 180 ], [ 33, 34, 180 ], [ 34, 165, 180 ], [ 165, 164, 180 ], [ 164, 179, 180 ], [ 179, 32, 180 ], [ 1, 2, 181 ], [ 2, 103, 181 ], [ 0, 1, 181 ], [ 103, 104, 181 ], [ 62, 63, 182 ], [ 63, 0, 182 ], [ 0, 181, 182 ], [ 181, 104, 182 ], [ 61, 62, 183 ], [ 62, 182, 183 ], [ 104, 105, 183 ], [ 182, 104, 183 ], [ 183, 105, 184 ], [ 116, 61, 184 ], [ 61, 183, 184 ], [ 105, 106, 185 ], [ 184, 105, 185 ], [ 117, 116, 185 ], [ 116, 184, 185 ], [ 118, 117, 185 ], [ 185, 106, 186 ], [ 119, 118, 186 ], [ 118, 185, 186 ], [ 106, 107, 187 ], [ 186, 106, 187 ], [ 120, 119, 187 ], [ 119, 186, 187 ], [ 107, 108, 188 ], [ 187, 107, 188 ], [ 121, 120, 188 ], [ 120, 187, 188 ], [ 108, 109, 189 ], [ 123, 122, 189 ], [ 188, 108, 189 ], [ 122, 121, 189 ], [ 121, 188, 189 ], [ 124, 123, 190 ], [ 123, 189, 190 ], [ 189, 109, 190 ], [ 125, 124, 191 ], [ 109, 110, 191 ], [ 190, 109, 191 ], [ 124, 190, 191 ], [ 126, 125, 192 ], [ 110, 111, 192 ], [ 191, 110, 192 ], [ 125, 191, 192 ], [ 111, 112, 193 ], [ 112, 127, 193 ], [ 21, 126, 193 ], [ 127, 21, 193 ], [ 126, 192, 193 ], [ 192, 111, 193 ], [ 58, 59, 194 ], [ 59, 116, 194 ], [ 116, 117, 194 ], [ 57, 58, 194 ], [ 128, 57, 194 ], [ 129, 128, 194 ], [ 117, 118, 195 ], [ 130, 129, 195 ], [ 129, 194, 195 ], [ 194, 117, 195 ], [ 118, 119, 196 ], [ 119, 131, 196 ], [ 131, 130, 196 ], [ 130, 195, 196 ], [ 195, 118, 196 ], [ 121, 122, 197 ], [ 134, 121, 197 ], [ 135, 134, 197 ], [ 136, 135, 198 ], [ 122, 123, 198 ], [ 197, 122, 198 ], [ 135, 197, 198 ], [ 198, 123, 199 ], [ 136, 198, 199 ], [ 25, 26, 201 ], [ 26, 27, 201 ], [ 137, 136, 202 ], [ 136, 199, 202 ], [ 199, 200, 202 ], [ 27, 28, 203 ], [ 28, 137, 203 ], [ 201, 27, 203 ], [ 200, 201, 203 ], [ 202, 200, 203 ], [ 137, 202, 203 ], [ 123, 124, 204 ], [ 199, 123, 204 ], [ 200, 199, 204 ], [ 201, 200, 204 ], [ 124, 125, 205 ], [ 125, 24, 205 ], [ 24, 25, 205 ], [ 204, 124, 205 ], [ 25, 201, 205 ], [ 201, 204, 205 ] ]
internal_vertex_count = 142
script = ExtResource( 59 )
auto_poly = true
copy_uvs = null

[node name="Position2D" type="Position2D" parent="HumanF1/Spine/Tits/Tits_armor_mesh"]
position = Vector2( 436, 590 )
script = ExtResource( 60 )
__meta__ = {
"_gizmo_extents_": 100.0
}
anchor = Vector2( 436, 590 )
lock_anchor_position = true

[node name="Position2D2" type="Position2D" parent="HumanF1/Spine/Tits/Tits_armor_mesh"]
position = Vector2( 365, 539 )
script = ExtResource( 60 )
__meta__ = {
"_gizmo_extents_": 110.0
}
anchor = Vector2( 365, 539 )
lock_anchor_position = true

[node name="Position2D3" type="Position2D" parent="HumanF1/Spine/Tits/Tits_armor_mesh"]
position = Vector2( 519, 539 )
script = ExtResource( 60 )
__meta__ = {
"_gizmo_extents_": 110.0
}
anchor = Vector2( 519, 539 )
lock_anchor_position = true

[node name="Position2D4" type="Position2D" parent="HumanF1/Spine/Tits/Tits_armor_mesh"]
visible = false
script = ExtResource( 60 )

[node name="Position2D5" type="Position2D" parent="HumanF1/Spine/Tits/Tits_armor_mesh"]
visible = false
script = ExtResource( 60 )

[node name="Position2D6" type="Position2D" parent="HumanF1/Spine/Tits/Tits_armor_mesh"]
visible = false
script = ExtResource( 60 )

[node name="Head" type="Bone2D" parent="HumanF1/Spine"]
position = Vector2( -181, -0.99939 )
rotation = -0.0663225
rest = Transform2D( 0.008, 0, 0, 0, 0, 0 )
default_length = 100.0

[node name="Head_tex" type="Sprite" parent="HumanF1/Spine/Head"]
material = SubResource( 8 )
position = Vector2( 404.835, 0.830383 )
rotation = -1.5708
texture = ExtResource( 37 )

[node name="Face" type="Bone2D" parent="HumanF1/Spine/Head"]
position = Vector2( -95.6526, 6.67578 )
rest = Transform2D( 0.008, 0, 0, 0, 0, 0 )
default_length = 100.0

[node name="Sklera_tex" type="Sprite" parent="HumanF1/Spine/Head/Face"]
position = Vector2( 280.374, -6.40714 )
rotation = -1.5708
texture = ExtResource( 58 )

[node name="Eyes_tex" type="Sprite" parent="HumanF1/Spine/Head/Face"]
material = SubResource( 12 )
position = Vector2( 499, -7.00186 )
rotation = -1.5708
texture = ExtResource( 62 )
__meta__ = {
"_editor_description_": ""
}

[node name="Face_tex" type="Sprite" parent="HumanF1/Spine/Head/Face"]
material = SubResource( 8 )
position = Vector2( 499.474, -5.84393 )
rotation = -1.5708
texture = ExtResource( 47 )

[node name="Eyebrows_tex" type="Sprite" parent="HumanF1/Spine/Head/Face"]
material = SubResource( 20 )
position = Vector2( 494.474, -6.8439 )
rotation = -1.5708
texture = ExtResource( 16 )

[node name="Lips_tex" type="Sprite" parent="HumanF1/Spine/Head/Face"]
material = SubResource( 13 )
position = Vector2( 499.474, -5.8439 )
rotation = -1.5708
texture = ExtResource( 22 )

[node name="Hair" type="Bone2D" parent="HumanF1/Spine/Head"]
position = Vector2( -161.971, 9.28658 )
rest = Transform2D( 0.008, 0, 0, 0, 0, 0 )
default_length = 100.0

[node name="Hairs_assist_mesh" type="Polygon2D" parent="HumanF1/Spine/Head/Hair"]
material = SubResource( 18 )
position = Vector2( -196.998, 429 )
rotation = -1.5708
offset = Vector2( 0, -1 )
texture = ExtResource( 24 )
polygon = PoolVector2Array( 224.342, 201.974, 216.712, 286.468, 211.449, 369.801, 214.081, 448.748, 237.765, 542.608, 282.502, 625.941, 332.502, 659.275, 398.291, 661.906, 447.414, 657.52, 487.765, 660.152, 557.94, 659.275, 598.291, 630.327, 647.414, 554.889, 681.625, 469.801, 700.046, 373.31, 695.66, 287.345, 671.975, 205.766, 630.921, 126.316, 559.211, 108.553, 471.053, 111.842, 399.342, 110.526, 305.263, 111.184, 253.947, 138.158, 361.449, 185.59, 339.519, 229.45, 333.379, 269.801, 330.747, 317.169, 332.502, 373.31, 333.379, 420.678, 332.502, 474.187, 333.379, 529.45, 334.256, 589.099, 381.625, 172.432, 422.853, 159.275, 450.923, 162.783, 517.589, 175.064, 547.414, 204.011, 551.8, 239.099, 558.818, 289.976, 561.449, 347.871, 553.554, 412.783, 550.046, 466.292, 544.782, 537.345, 538.642, 594.362, 442.151, 225.064, 464.958, 261.029, 493.028, 295.239, 502.677, 344.362, 501.8, 401.38, 499.168, 457.52, 499.168, 506.643, 494.782, 561.029, 490.396, 603.134, 416.712, 232.082, 400.923, 275.941, 393.028, 300.503, 390.396, 350.503, 390.396, 415.415, 387.765, 454.889, 385.133, 500.503, 382.502, 548.748, 382.502, 590.854, 293.028, 212.783, 280.747, 271.555, 276.361, 325.941, 275.484, 382.959, 276.361, 444.362, 278.993, 511.906, 286.888, 567.169, 299.168, 609.275, 599.168, 202.257, 621.975, 260.152, 631.625, 311.029, 638.642, 366.292, 632.502, 436.468, 615.835, 489.976, 599.168, 539.976, 580.747, 584.713, 448.291, 191.731, 485.133, 206.643, 508.818, 227.696, 526.361, 261.029, 533.379, 304.011, 533.379, 347.871, 533.379, 392.608, 530.747, 432.082, 524.607, 465.415, 413.203, 198.748, 386.888, 223.31, 369.344, 257.52, 363.203, 287.345, 359.695, 332.959, 359.695, 375.064, 363.203, 410.152, 367.589, 446.117, 626.974, 176.974, 650.923, 239.976, 663.203, 289.976, 664.958, 355.766, 658.818, 419.801, 647.414, 482.082, 626.361, 536.468, 600.923, 582.959, 575.484, 619.801, 259.868, 190.789, 258.818, 254.011, 249.168, 306.643, 252.677, 379.45, 254.432, 440.854, 257.063, 486.468, 262.326, 539.976, 278.993, 593.485, 330.747, 202.257, 313.203, 277.696, 305.309, 329.45, 307.063, 389.099, 307.063, 447.871, 314.081, 493.485, 318.467, 545.24, 318.467, 587.345, 573.73, 206.643, 588.642, 261.906, 600.923, 332.082, 602.677, 370.678, 594.782, 453.134, 579.87, 501.38, 558.818, 563.661, 438.642, 267.169, 443.028, 322.432, 443.905, 371.555, 445.66, 413.661, 443.905, 451.38, 443.905, 492.608, 442.151, 539.099, 441.274, 575.064, 439.519, 610.152, 592.105, 157.895, 549.342, 140.789, 505.309, 145.239, 443.905, 139.099, 403.554, 141.731, 342.763, 140.789, 296.711, 157.895, 468.467, 306.643, 471.098, 345.239, 474.607, 393.485, 472.853, 439.099, 471.975, 477.696, 470.221, 525.064, 467.589, 570.678, 464.958, 616.292, 420.221, 311.029, 417.589, 346.994, 415.835, 393.485, 412.326, 434.713, 411.449, 482.082, 412.326, 521.555, 413.203, 559.275, 412.326, 598.748, 597.414, 414.538, 635.133, 395.239, 358.818, 488.222, 358.818, 535.59, 358.818, 588.222, 361.449, 633.836, 517.589, 635.59, 522.853, 523.31, 520.221, 558.397, 456.186, 211.906, 484.256, 236.468, 499.168, 264.538, 513.203, 302.257, 520.221, 344.362, 518.467, 384.713, 515.835, 422.432, 514.081, 465.415, 406.186, 225.064, 386.888, 267.169, 375.484, 296.117, 374.607, 333.836, 380.747, 383.836, 408.818, 183.836, 378.116, 205.766, 364.081, 229.45, 354.432, 265.415, 349.168, 296.117, 347.414, 342.608, 347.414, 379.45, 476.361, 186.468, 512.326, 204.889, 539.519, 246.994, 546.537, 286.468, 549.168, 333.836, 545.66, 361.906 )
uv = PoolVector2Array
polygons = [ [ 8, 7, 9 ], [ 5, 6, 69 ], [ 34, 33, 78 ], [ 41, 40, 85 ], [ 40, 84, 85 ], [ 41, 85, 86 ], [ 53, 44, 87 ], [ 44, 78, 87 ], [ 28, 29, 94 ], [ 93, 28, 94 ], [ 58, 57, 94 ], [ 57, 93, 94 ], [ 16, 17, 95 ], [ 15, 16, 96 ], [ 70, 71, 96 ], [ 95, 70, 96 ], [ 16, 95, 96 ], [ 71, 72, 97 ], [ 15, 96, 97 ], [ 96, 71, 97 ], [ 14, 15, 98 ], [ 15, 97, 98 ], [ 72, 73, 98 ], [ 97, 72, 98 ], [ 13, 14, 99 ], [ 74, 13, 99 ], [ 14, 98, 99 ], [ 12, 13, 100 ], [ 13, 74, 100 ], [ 74, 75, 100 ], [ 75, 76, 101 ], [ 12, 100, 101 ], [ 100, 75, 101 ], [ 11, 12, 102 ], [ 76, 77, 102 ], [ 12, 101, 102 ], [ 101, 76, 102 ], [ 10, 11, 103 ], [ 77, 43, 103 ], [ 11, 102, 103 ], [ 102, 77, 103 ], [ 22, 0, 104 ], [ 0, 1, 105 ], [ 63, 62, 105 ], [ 62, 104, 105 ], [ 104, 0, 105 ], [ 1, 2, 106 ], [ 64, 63, 106 ], [ 63, 105, 106 ], [ 105, 1, 106 ], [ 2, 3, 107 ], [ 65, 64, 107 ], [ 64, 106, 107 ], [ 106, 2, 107 ], [ 107, 3, 108 ], [ 66, 65, 108 ], [ 65, 107, 108 ], [ 3, 4, 109 ], [ 108, 3, 109 ], [ 66, 108, 109 ], [ 67, 109, 110 ], [ 109, 4, 110 ], [ 4, 5, 111 ], [ 5, 69, 111 ], [ 68, 110, 111 ], [ 110, 4, 111 ], [ 62, 24, 112 ], [ 25, 24, 113 ], [ 24, 62, 113 ], [ 62, 63, 113 ], [ 63, 64, 113 ], [ 64, 65, 114 ], [ 26, 113, 114 ], [ 113, 64, 114 ], [ 28, 27, 115 ], [ 65, 66, 115 ], [ 27, 114, 115 ], [ 114, 65, 115 ], [ 29, 28, 116 ], [ 28, 115, 116 ], [ 115, 66, 116 ], [ 29, 116, 117 ], [ 66, 109, 117 ], [ 116, 66, 117 ], [ 109, 67, 117 ], [ 67, 110, 118 ], [ 110, 68, 118 ], [ 30, 117, 118 ], [ 117, 67, 118 ], [ 69, 31, 119 ], [ 68, 111, 119 ], [ 111, 69, 119 ], [ 31, 118, 119 ], [ 118, 68, 119 ], [ 36, 37, 120 ], [ 37, 38, 121 ], [ 72, 71, 121 ], [ 120, 37, 121 ], [ 71, 70, 121 ], [ 70, 120, 121 ], [ 73, 72, 122 ], [ 72, 121, 122 ], [ 121, 38, 122 ], [ 73, 122, 123 ], [ 122, 39, 123 ], [ 40, 41, 124 ], [ 75, 74, 124 ], [ 42, 76, 125 ], [ 76, 75, 125 ], [ 75, 124, 125 ], [ 124, 41, 125 ], [ 43, 77, 126 ], [ 76, 42, 126 ], [ 77, 76, 126 ], [ 45, 44, 127 ], [ 44, 53, 127 ], [ 53, 54, 127 ], [ 7, 8, 135 ], [ 70, 95, 136 ], [ 95, 17, 136 ], [ 17, 18, 136 ], [ 120, 70, 136 ], [ 36, 120, 136 ], [ 136, 18, 137 ], [ 35, 36, 137 ], [ 36, 136, 137 ], [ 19, 34, 138 ], [ 18, 19, 138 ], [ 137, 18, 138 ], [ 35, 137, 138 ], [ 19, 20, 139 ], [ 33, 34, 139 ], [ 34, 19, 139 ], [ 33, 139, 140 ], [ 139, 20, 140 ], [ 23, 32, 141 ], [ 20, 21, 141 ], [ 140, 20, 141 ], [ 32, 140, 141 ], [ 21, 22, 142 ], [ 22, 104, 142 ], [ 104, 62, 142 ], [ 62, 112, 142 ], [ 141, 21, 142 ], [ 112, 23, 142 ], [ 23, 141, 142 ], [ 47, 46, 143 ], [ 46, 45, 143 ], [ 45, 127, 143 ], [ 127, 128, 143 ], [ 128, 129, 144 ], [ 47, 143, 144 ], [ 143, 128, 144 ], [ 129, 130, 145 ], [ 47, 144, 145 ], [ 144, 129, 145 ], [ 130, 131, 146 ], [ 48, 145, 146 ], [ 145, 130, 146 ], [ 131, 132, 147 ], [ 49, 146, 147 ], [ 146, 131, 147 ], [ 51, 50, 148 ], [ 132, 133, 148 ], [ 50, 147, 148 ], [ 147, 132, 148 ], [ 52, 51, 149 ], [ 133, 134, 149 ], [ 51, 148, 149 ], [ 148, 133, 149 ], [ 8, 9, 150 ], [ 9, 52, 150 ], [ 135, 8, 150 ], [ 134, 135, 150 ], [ 149, 134, 150 ], [ 52, 149, 150 ], [ 54, 55, 151 ], [ 127, 54, 151 ], [ 128, 127, 151 ], [ 129, 128, 152 ], [ 128, 151, 152 ], [ 151, 56, 152 ], [ 130, 129, 153 ], [ 152, 56, 153 ], [ 129, 152, 153 ], [ 57, 58, 154 ], [ 131, 130, 154 ], [ 130, 153, 154 ], [ 153, 57, 154 ], [ 58, 59, 155 ], [ 132, 131, 155 ], [ 131, 154, 155 ], [ 154, 58, 155 ], [ 59, 60, 156 ], [ 155, 59, 156 ], [ 133, 132, 156 ], [ 132, 155, 156 ], [ 60, 61, 157 ], [ 134, 133, 157 ], [ 133, 156, 157 ], [ 156, 60, 157 ], [ 7, 135, 158 ], [ 135, 134, 158 ], [ 134, 157, 158 ], [ 157, 61, 158 ], [ 124, 74, 159 ], [ 123, 40, 159 ], [ 40, 124, 159 ], [ 98, 73, 160 ], [ 99, 98, 160 ], [ 74, 99, 160 ], [ 159, 74, 160 ], [ 73, 123, 160 ], [ 123, 159, 160 ], [ 94, 29, 161 ], [ 59, 58, 161 ], [ 58, 94, 161 ], [ 29, 117, 161 ], [ 117, 30, 161 ], [ 60, 59, 162 ], [ 30, 118, 162 ], [ 118, 31, 162 ], [ 59, 161, 162 ], [ 161, 30, 162 ], [ 61, 60, 163 ], [ 60, 162, 163 ], [ 162, 31, 163 ], [ 6, 7, 164 ], [ 31, 69, 164 ], [ 69, 6, 164 ], [ 7, 158, 164 ], [ 158, 61, 164 ], [ 163, 31, 164 ], [ 61, 163, 164 ], [ 9, 10, 165 ], [ 43, 52, 165 ], [ 52, 9, 165 ], [ 10, 103, 165 ], [ 103, 43, 165 ], [ 50, 51, 166 ], [ 41, 86, 166 ], [ 86, 50, 166 ], [ 42, 125, 166 ], [ 125, 41, 166 ], [ 51, 52, 167 ], [ 52, 43, 167 ], [ 126, 42, 167 ], [ 43, 126, 167 ], [ 42, 166, 167 ], [ 166, 51, 167 ], [ 78, 44, 168 ], [ 80, 79, 169 ], [ 44, 45, 169 ], [ 168, 44, 169 ], [ 79, 168, 169 ], [ 45, 46, 170 ], [ 169, 45, 170 ], [ 81, 80, 170 ], [ 80, 169, 170 ], [ 46, 47, 171 ], [ 81, 170, 171 ], [ 170, 46, 171 ], [ 171, 47, 172 ], [ 82, 171, 172 ], [ 48, 84, 173 ], [ 47, 145, 173 ], [ 145, 48, 173 ], [ 172, 47, 173 ], [ 83, 172, 173 ], [ 49, 85, 174 ], [ 84, 48, 174 ], [ 85, 84, 174 ], [ 48, 146, 174 ], [ 146, 49, 174 ], [ 50, 86, 175 ], [ 85, 49, 175 ], [ 86, 85, 175 ], [ 49, 147, 175 ], [ 147, 50, 175 ], [ 53, 87, 176 ], [ 87, 88, 176 ], [ 89, 90, 177 ], [ 54, 53, 177 ], [ 53, 176, 177 ], [ 88, 89, 177 ], [ 176, 88, 177 ], [ 55, 54, 178 ], [ 54, 177, 178 ], [ 177, 90, 178 ], [ 92, 56, 179 ], [ 56, 151, 179 ], [ 151, 55, 179 ], [ 55, 178, 179 ], [ 178, 91, 179 ], [ 92, 93, 180 ], [ 93, 57, 180 ], [ 56, 92, 180 ], [ 153, 56, 180 ], [ 57, 153, 180 ], [ 78, 33, 181 ], [ 87, 78, 181 ], [ 33, 140, 181 ], [ 140, 32, 181 ], [ 32, 23, 182 ], [ 181, 32, 182 ], [ 88, 87, 182 ], [ 87, 181, 182 ], [ 89, 88, 183 ], [ 88, 182, 183 ], [ 23, 112, 183 ], [ 182, 23, 183 ], [ 112, 24, 183 ], [ 24, 25, 184 ], [ 90, 89, 184 ], [ 89, 183, 184 ], [ 183, 24, 184 ], [ 26, 91, 185 ], [ 25, 113, 185 ], [ 113, 26, 185 ], [ 91, 178, 185 ], [ 178, 90, 185 ], [ 90, 184, 185 ], [ 184, 25, 185 ], [ 91, 26, 186 ], [ 26, 114, 186 ], [ 114, 27, 186 ], [ 92, 179, 186 ], [ 179, 91, 186 ], [ 27, 28, 187 ], [ 28, 93, 187 ], [ 93, 92, 187 ], [ 92, 186, 187 ], [ 186, 27, 187 ], [ 34, 78, 188 ], [ 35, 138, 188 ], [ 138, 34, 188 ], [ 78, 168, 188 ], [ 168, 79, 188 ], [ 36, 35, 189 ], [ 80, 36, 189 ], [ 79, 80, 189 ], [ 35, 188, 189 ], [ 188, 79, 189 ], [ 37, 36, 190 ], [ 36, 80, 190 ], [ 80, 81, 190 ], [ 82, 38, 191 ], [ 81, 171, 191 ], [ 171, 82, 191 ], [ 38, 37, 191 ], [ 37, 190, 191 ], [ 190, 81, 191 ], [ 38, 82, 192 ], [ 83, 39, 192 ], [ 39, 122, 192 ], [ 122, 38, 192 ], [ 82, 172, 192 ], [ 172, 83, 192 ], [ 84, 40, 193 ], [ 39, 83, 193 ], [ 40, 123, 193 ], [ 123, 39, 193 ], [ 83, 173, 193 ], [ 173, 84, 193 ] ]
internal_vertex_count = 171
script = ExtResource( 59 )
__meta__ = {
"_editor_description_": ""
}
auto_poly = true
copy_uvs = null

[node name="Position2D" type="Position2D" parent="HumanF1/Spine/Head/Hair/Hairs_assist_mesh"]
visible = false
position = Vector2( 361, 478 )
script = ExtResource( 60 )
__meta__ = {
"_gizmo_extents_": 150.0
}
anchor = Vector2( 361, 478 )
lock_anchor_position = true

[node name="Position2D2" type="Position2D" parent="HumanF1/Spine/Head/Hair/Hairs_assist_mesh"]
visible = false
position = Vector2( 520, 478 )
script = ExtResource( 60 )
__meta__ = {
"_gizmo_extents_": 150.0
}
anchor = Vector2( 520, 478 )
lock_anchor_position = true

[node name="Position2D3" type="Position2D" parent="HumanF1/Spine/Head/Hair/Hairs_assist_mesh"]
visible = false
position = Vector2( 239, -84 )
script = ExtResource( 60 )
__meta__ = {
"_gizmo_extents_": 200.0
}
anchor = Vector2( 442, 213 )

[node name="Position2D4" type="Position2D" parent="HumanF1/Spine/Head/Hair/Hairs_assist_mesh"]
visible = false
position = Vector2( 55, -63 )
script = ExtResource( 60 )
__meta__ = {
"_gizmo_extents_": 100.0
}
anchor = Vector2( 449, 369 )

[node name="Position2D5" type="Position2D" parent="HumanF1/Spine/Head/Hair/Hairs_assist_mesh"]
visible = false
script = ExtResource( 60 )

[node name="Position2D6" type="Position2D" parent="HumanF1/Spine/Head/Hair/Hairs_assist_mesh"]
visible = false
script = ExtResource( 60 )

[node name="Hairs_mesh" type="Polygon2D" parent="HumanF1/Spine/Head/Hair"]
material = SubResource( 20 )
position = Vector2( -197.998, 428.001 )
rotation = -1.5708
offset = Vector2( 0, -1 )
texture = ExtResource( 44 )
polygon = PoolVector2Array( 226.361, 214.538, 216.712, 286.468, 211.449, 369.801, 214.081, 448.748, 237.765, 542.608, 282.502, 625.941, 332.502, 659.275, 398.291, 661.906, 447.414, 657.52, 487.765, 660.152, 557.94, 659.275, 598.291, 630.327, 647.414, 554.889, 681.625, 469.801, 700.046, 373.31, 695.66, 287.345, 671.975, 205.766, 622.853, 153.134, 552.677, 125.941, 472.853, 119.801, 400.923, 119.801, 327.239, 136.468, 268.467, 158.397, 361.449, 185.59, 339.519, 229.45, 333.379, 269.801, 330.747, 317.169, 332.502, 373.31, 333.379, 420.678, 332.502, 474.187, 333.379, 529.45, 334.256, 589.099, 381.625, 172.432, 422.853, 159.275, 450.923, 162.783, 517.589, 175.064, 547.414, 204.011, 551.8, 239.099, 558.818, 289.976, 561.449, 347.871, 553.554, 412.783, 550.046, 466.292, 544.782, 537.345, 538.642, 594.362, 442.151, 225.064, 464.958, 261.029, 493.028, 295.239, 502.677, 344.362, 501.8, 401.38, 499.168, 457.52, 499.168, 506.643, 494.782, 561.029, 490.396, 603.134, 416.712, 232.082, 400.923, 275.941, 393.028, 300.503, 390.396, 350.503, 390.396, 415.415, 387.765, 454.889, 385.133, 500.503, 382.502, 548.748, 382.502, 590.854, 293.028, 212.783, 280.747, 271.555, 276.361, 325.941, 275.484, 382.959, 276.361, 444.362, 278.993, 511.906, 286.888, 567.169, 299.168, 609.275, 599.168, 202.257, 621.975, 260.152, 631.625, 311.029, 638.642, 366.292, 632.502, 436.468, 615.835, 489.976, 599.168, 539.976, 580.747, 584.713, 448.291, 191.731, 485.133, 206.643, 508.818, 227.696, 526.361, 261.029, 533.379, 304.011, 533.379, 347.871, 533.379, 392.608, 530.747, 432.082, 524.607, 465.415, 413.203, 198.748, 386.888, 223.31, 369.344, 257.52, 363.203, 287.345, 359.695, 332.959, 359.695, 375.064, 363.203, 410.152, 367.589, 446.117, 619.344, 186.468, 650.923, 239.976, 663.203, 289.976, 664.958, 355.766, 658.818, 419.801, 647.414, 482.082, 626.361, 536.468, 600.923, 582.959, 575.484, 619.801, 278.993, 193.485, 258.818, 254.011, 249.168, 306.643, 252.677, 379.45, 254.432, 440.854, 257.063, 486.468, 262.326, 539.976, 278.993, 593.485, 330.747, 202.257, 313.203, 277.696, 305.309, 329.45, 307.063, 389.099, 307.063, 447.871, 314.081, 493.485, 318.467, 545.24, 318.467, 587.345, 573.73, 206.643, 588.642, 261.906, 600.923, 332.082, 602.677, 370.678, 594.782, 453.134, 579.87, 501.38, 558.818, 563.661, 438.642, 267.169, 443.028, 322.432, 443.905, 371.555, 445.66, 413.661, 443.905, 451.38, 443.905, 492.608, 442.151, 539.099, 441.274, 575.064, 439.519, 610.152, 581.625, 176.818, 538.642, 150.503, 505.309, 145.239, 443.905, 139.099, 403.554, 141.731, 353.554, 153.134, 319.344, 170.678, 468.467, 306.643, 471.098, 345.239, 474.607, 393.485, 472.853, 439.099, 471.975, 477.696, 470.221, 525.064, 467.589, 570.678, 464.958, 616.292, 420.221, 311.029, 417.589, 346.994, 415.835, 393.485, 412.326, 434.713, 411.449, 482.082, 412.326, 521.555, 413.203, 559.275, 412.326, 598.748, 597.414, 414.538, 635.133, 395.239, 358.818, 488.222, 358.818, 535.59, 358.818, 588.222, 361.449, 633.836, 517.589, 635.59, 522.853, 523.31, 520.221, 558.397, 456.186, 211.906, 484.256, 236.468, 499.168, 264.538, 513.203, 302.257, 520.221, 344.362, 518.467, 384.713, 515.835, 422.432, 514.081, 465.415, 406.186, 225.064, 386.888, 267.169, 375.484, 296.117, 374.607, 333.836, 380.747, 383.836, 408.818, 183.836, 378.116, 205.766, 364.081, 229.45, 354.432, 265.415, 349.168, 296.117, 347.414, 342.608, 347.414, 379.45, 476.361, 186.468, 512.326, 204.889, 539.519, 246.994, 546.537, 286.468, 549.168, 333.836, 545.66, 361.906 )
uv = PoolVector2Array
polygons = [ [ 8, 7, 9 ], [ 5, 6, 69 ], [ 34, 33, 78 ], [ 41, 40, 85 ], [ 40, 84, 85 ], [ 41, 85, 86 ], [ 53, 44, 87 ], [ 44, 78, 87 ], [ 28, 29, 94 ], [ 93, 28, 94 ], [ 58, 57, 94 ], [ 57, 93, 94 ], [ 16, 17, 95 ], [ 15, 16, 96 ], [ 70, 71, 96 ], [ 95, 70, 96 ], [ 16, 95, 96 ], [ 71, 72, 97 ], [ 15, 96, 97 ], [ 96, 71, 97 ], [ 14, 15, 98 ], [ 15, 97, 98 ], [ 72, 73, 98 ], [ 97, 72, 98 ], [ 13, 14, 99 ], [ 74, 13, 99 ], [ 14, 98, 99 ], [ 12, 13, 100 ], [ 13, 74, 100 ], [ 74, 75, 100 ], [ 75, 76, 101 ], [ 12, 100, 101 ], [ 100, 75, 101 ], [ 11, 12, 102 ], [ 76, 77, 102 ], [ 12, 101, 102 ], [ 101, 76, 102 ], [ 10, 11, 103 ], [ 77, 43, 103 ], [ 11, 102, 103 ], [ 102, 77, 103 ], [ 22, 0, 104 ], [ 0, 1, 105 ], [ 63, 62, 105 ], [ 62, 104, 105 ], [ 104, 0, 105 ], [ 1, 2, 106 ], [ 64, 63, 106 ], [ 63, 105, 106 ], [ 105, 1, 106 ], [ 2, 3, 107 ], [ 65, 64, 107 ], [ 64, 106, 107 ], [ 106, 2, 107 ], [ 107, 3, 108 ], [ 66, 65, 108 ], [ 65, 107, 108 ], [ 3, 4, 109 ], [ 108, 3, 109 ], [ 66, 108, 109 ], [ 67, 109, 110 ], [ 109, 4, 110 ], [ 4, 5, 111 ], [ 5, 69, 111 ], [ 68, 110, 111 ], [ 110, 4, 111 ], [ 62, 24, 112 ], [ 25, 24, 113 ], [ 24, 62, 113 ], [ 62, 63, 113 ], [ 63, 64, 113 ], [ 64, 65, 114 ], [ 26, 113, 114 ], [ 113, 64, 114 ], [ 28, 27, 115 ], [ 65, 66, 115 ], [ 27, 114, 115 ], [ 114, 65, 115 ], [ 29, 28, 116 ], [ 28, 115, 116 ], [ 115, 66, 116 ], [ 29, 116, 117 ], [ 66, 109, 117 ], [ 116, 66, 117 ], [ 109, 67, 117 ], [ 67, 110, 118 ], [ 110, 68, 118 ], [ 30, 117, 118 ], [ 117, 67, 118 ], [ 69, 31, 119 ], [ 68, 111, 119 ], [ 111, 69, 119 ], [ 31, 118, 119 ], [ 118, 68, 119 ], [ 36, 37, 120 ], [ 37, 38, 121 ], [ 72, 71, 121 ], [ 120, 37, 121 ], [ 71, 70, 121 ], [ 70, 120, 121 ], [ 73, 72, 122 ], [ 72, 121, 122 ], [ 121, 38, 122 ], [ 73, 122, 123 ], [ 122, 39, 123 ], [ 40, 41, 124 ], [ 75, 74, 124 ], [ 42, 76, 125 ], [ 76, 75, 125 ], [ 75, 124, 125 ], [ 124, 41, 125 ], [ 43, 77, 126 ], [ 76, 42, 126 ], [ 77, 76, 126 ], [ 45, 44, 127 ], [ 44, 53, 127 ], [ 53, 54, 127 ], [ 7, 8, 135 ], [ 70, 95, 136 ], [ 95, 17, 136 ], [ 17, 18, 136 ], [ 120, 70, 136 ], [ 36, 120, 136 ], [ 136, 18, 137 ], [ 35, 36, 137 ], [ 36, 136, 137 ], [ 19, 34, 138 ], [ 18, 19, 138 ], [ 137, 18, 138 ], [ 35, 137, 138 ], [ 19, 20, 139 ], [ 33, 34, 139 ], [ 34, 19, 139 ], [ 33, 139, 140 ], [ 139, 20, 140 ], [ 23, 32, 141 ], [ 20, 21, 141 ], [ 140, 20, 141 ], [ 32, 140, 141 ], [ 21, 22, 142 ], [ 22, 104, 142 ], [ 104, 62, 142 ], [ 62, 112, 142 ], [ 141, 21, 142 ], [ 112, 23, 142 ], [ 23, 141, 142 ], [ 47, 46, 143 ], [ 46, 45, 143 ], [ 45, 127, 143 ], [ 127, 128, 143 ], [ 128, 129, 144 ], [ 47, 143, 144 ], [ 143, 128, 144 ], [ 129, 130, 145 ], [ 47, 144, 145 ], [ 144, 129, 145 ], [ 130, 131, 146 ], [ 48, 145, 146 ], [ 145, 130, 146 ], [ 131, 132, 147 ], [ 49, 146, 147 ], [ 146, 131, 147 ], [ 51, 50, 148 ], [ 132, 133, 148 ], [ 50, 147, 148 ], [ 147, 132, 148 ], [ 52, 51, 149 ], [ 133, 134, 149 ], [ 51, 148, 149 ], [ 148, 133, 149 ], [ 8, 9, 150 ], [ 9, 52, 150 ], [ 135, 8, 150 ], [ 134, 135, 150 ], [ 149, 134, 150 ], [ 52, 149, 150 ], [ 54, 55, 151 ], [ 127, 54, 151 ], [ 128, 127, 151 ], [ 129, 128, 152 ], [ 128, 151, 152 ], [ 151, 56, 152 ], [ 130, 129, 153 ], [ 152, 56, 153 ], [ 129, 152, 153 ], [ 57, 58, 154 ], [ 131, 130, 154 ], [ 130, 153, 154 ], [ 153, 57, 154 ], [ 58, 59, 155 ], [ 132, 131, 155 ], [ 131, 154, 155 ], [ 154, 58, 155 ], [ 59, 60, 156 ], [ 155, 59, 156 ], [ 133, 132, 156 ], [ 132, 155, 156 ], [ 60, 61, 157 ], [ 134, 133, 157 ], [ 133, 156, 157 ], [ 156, 60, 157 ], [ 7, 135, 158 ], [ 135, 134, 158 ], [ 134, 157, 158 ], [ 157, 61, 158 ], [ 124, 74, 159 ], [ 123, 40, 159 ], [ 40, 124, 159 ], [ 98, 73, 160 ], [ 99, 98, 160 ], [ 74, 99, 160 ], [ 159, 74, 160 ], [ 73, 123, 160 ], [ 123, 159, 160 ], [ 94, 29, 161 ], [ 59, 58, 161 ], [ 58, 94, 161 ], [ 29, 117, 161 ], [ 117, 30, 161 ], [ 60, 59, 162 ], [ 30, 118, 162 ], [ 118, 31, 162 ], [ 59, 161, 162 ], [ 161, 30, 162 ], [ 61, 60, 163 ], [ 60, 162, 163 ], [ 162, 31, 163 ], [ 6, 7, 164 ], [ 31, 69, 164 ], [ 69, 6, 164 ], [ 7, 158, 164 ], [ 158, 61, 164 ], [ 163, 31, 164 ], [ 61, 163, 164 ], [ 9, 10, 165 ], [ 43, 52, 165 ], [ 52, 9, 165 ], [ 10, 103, 165 ], [ 103, 43, 165 ], [ 50, 51, 166 ], [ 41, 86, 166 ], [ 86, 50, 166 ], [ 42, 125, 166 ], [ 125, 41, 166 ], [ 51, 52, 167 ], [ 52, 43, 167 ], [ 126, 42, 167 ], [ 43, 126, 167 ], [ 42, 166, 167 ], [ 166, 51, 167 ], [ 78, 44, 168 ], [ 80, 79, 169 ], [ 44, 45, 169 ], [ 168, 44, 169 ], [ 79, 168, 169 ], [ 45, 46, 170 ], [ 169, 45, 170 ], [ 81, 80, 170 ], [ 80, 169, 170 ], [ 46, 47, 171 ], [ 81, 170, 171 ], [ 170, 46, 171 ], [ 171, 47, 172 ], [ 82, 171, 172 ], [ 48, 84, 173 ], [ 47, 145, 173 ], [ 145, 48, 173 ], [ 172, 47, 173 ], [ 83, 172, 173 ], [ 49, 85, 174 ], [ 84, 48, 174 ], [ 85, 84, 174 ], [ 48, 146, 174 ], [ 146, 49, 174 ], [ 50, 86, 175 ], [ 85, 49, 175 ], [ 86, 85, 175 ], [ 49, 147, 175 ], [ 147, 50, 175 ], [ 53, 87, 176 ], [ 87, 88, 176 ], [ 89, 90, 177 ], [ 54, 53, 177 ], [ 53, 176, 177 ], [ 88, 89, 177 ], [ 176, 88, 177 ], [ 55, 54, 178 ], [ 54, 177, 178 ], [ 177, 90, 178 ], [ 92, 56, 179 ], [ 56, 151, 179 ], [ 151, 55, 179 ], [ 55, 178, 179 ], [ 178, 91, 179 ], [ 92, 93, 180 ], [ 93, 57, 180 ], [ 56, 92, 180 ], [ 153, 56, 180 ], [ 57, 153, 180 ], [ 78, 33, 181 ], [ 87, 78, 181 ], [ 33, 140, 181 ], [ 140, 32, 181 ], [ 32, 23, 182 ], [ 181, 32, 182 ], [ 88, 87, 182 ], [ 87, 181, 182 ], [ 89, 88, 183 ], [ 88, 182, 183 ], [ 23, 112, 183 ], [ 182, 23, 183 ], [ 112, 24, 183 ], [ 24, 25, 184 ], [ 90, 89, 184 ], [ 89, 183, 184 ], [ 183, 24, 184 ], [ 26, 91, 185 ], [ 25, 113, 185 ], [ 113, 26, 185 ], [ 91, 178, 185 ], [ 178, 90, 185 ], [ 90, 184, 185 ], [ 184, 25, 185 ], [ 91, 26, 186 ], [ 26, 114, 186 ], [ 114, 27, 186 ], [ 92, 179, 186 ], [ 179, 91, 186 ], [ 27, 28, 187 ], [ 28, 93, 187 ], [ 93, 92, 187 ], [ 92, 186, 187 ], [ 186, 27, 187 ], [ 34, 78, 188 ], [ 35, 138, 188 ], [ 138, 34, 188 ], [ 78, 168, 188 ], [ 168, 79, 188 ], [ 36, 35, 189 ], [ 80, 36, 189 ], [ 79, 80, 189 ], [ 35, 188, 189 ], [ 188, 79, 189 ], [ 37, 36, 190 ], [ 36, 80, 190 ], [ 80, 81, 190 ], [ 82, 38, 191 ], [ 81, 171, 191 ], [ 171, 82, 191 ], [ 38, 37, 191 ], [ 37, 190, 191 ], [ 190, 81, 191 ], [ 38, 82, 192 ], [ 83, 39, 192 ], [ 39, 122, 192 ], [ 122, 38, 192 ], [ 82, 172, 192 ], [ 172, 83, 192 ], [ 84, 40, 193 ], [ 39, 83, 193 ], [ 40, 123, 193 ], [ 123, 39, 193 ], [ 83, 173, 193 ], [ 173, 84, 193 ] ]
internal_vertex_count = 171
script = ExtResource( 59 )
auto_poly = true
copy_uvs = null

[node name="Position2D" type="Position2D" parent="HumanF1/Spine/Head/Hair/Hairs_mesh"]
position = Vector2( 361, 478 )
script = ExtResource( 60 )
__meta__ = {
"_gizmo_extents_": 200.0
}
anchor = Vector2( 361, 478 )
lock_anchor_position = true

[node name="Position2D2" type="Position2D" parent="HumanF1/Spine/Head/Hair/Hairs_mesh"]
position = Vector2( 520, 478 )
script = ExtResource( 60 )
__meta__ = {
"_gizmo_extents_": 200.0
}
anchor = Vector2( 520, 478 )
lock_anchor_position = true

[node name="Position2D3" type="Position2D" parent="HumanF1/Spine/Head/Hair/Hairs_mesh"]
visible = false
position = Vector2( 239, -84 )
script = ExtResource( 60 )
__meta__ = {
"_gizmo_extents_": 200.0
}
anchor = Vector2( 442, 213 )

[node name="Position2D4" type="Position2D" parent="HumanF1/Spine/Head/Hair/Hairs_mesh"]
visible = false
position = Vector2( 55, -63 )
script = ExtResource( 60 )
__meta__ = {
"_gizmo_extents_": 100.0
}
anchor = Vector2( 449, 369 )

[node name="Position2D5" type="Position2D" parent="HumanF1/Spine/Head/Hair/Hairs_mesh"]
visible = false
script = ExtResource( 60 )

[node name="Position2D6" type="Position2D" parent="HumanF1/Spine/Head/Hair/Hairs_mesh"]
visible = false
script = ExtResource( 60 )

[node name="Ears_furry_tex" type="Sprite" parent="HumanF1/Spine/Head/Hair"]
visible = false
material = SubResource( 20 )
position = Vector2( 553.437, -3.33093 )
rotation = -1.5708
texture = ExtResource( 42 )

[node name="Head_armor_tex" type="Sprite" parent="HumanF1/Spine/Head/Hair"]
position = Vector2( -29, 7.62939e-05 )
rotation = -1.5708

[node name="Horns_tex" type="Sprite" parent="HumanF1/Spine/Head/Hair"]
modulate = Color( 0.901961, 0.901961, 1, 1 )
material = SubResource( 16 )
position = Vector2( 544, -9.00195 )
rotation = -1.5708
texture = ExtResource( 61 )
__meta__ = {
"_editor_description_": ""
}

[node name="Ears_humanoid_tex" type="Sprite" parent="HumanF1/Spine/Head"]
visible = false
material = SubResource( 8 )
position = Vector2( 567, -10.002 )
rotation = -1.5708
scale = Vector2( 0.95, 0.95 )
texture = ExtResource( 40 )
